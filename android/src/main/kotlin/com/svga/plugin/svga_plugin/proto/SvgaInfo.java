// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: svga_info.proto

package com.svga.plugin.svga_plugin.proto;

public final class SvgaInfo {
  private SvgaInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SVGALoadInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SVGALoadInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Exclusive with remoteUrl
     * </pre>
     *
     * <code>string assetUrl = 1;</code>
     * @return The assetUrl.
     */
    java.lang.String getAssetUrl();
    /**
     * <pre>
     * Exclusive with remoteUrl
     * </pre>
     *
     * <code>string assetUrl = 1;</code>
     * @return The bytes for assetUrl.
     */
    com.google.protobuf.ByteString
        getAssetUrlBytes();

    /**
     * <pre>
     * Exclusive with assetUrl
     * </pre>
     *
     * <code>string remoteUrl = 2;</code>
     * @return The remoteUrl.
     */
    java.lang.String getRemoteUrl();
    /**
     * <pre>
     * Exclusive with assetUrl
     * </pre>
     *
     * <code>string remoteUrl = 2;</code>
     * @return The bytes for remoteUrl.
     */
    com.google.protobuf.ByteString
        getRemoteUrlBytes();

    /**
     * <code>double width = 3;</code>
     * @return The width.
     */
    double getWidth();

    /**
     * <code>double height = 4;</code>
     * @return The height.
     */
    double getHeight();

    /**
     * <pre>
     * Created on Flutter side and should be unique accross all
     * SVGA widgets, used to handle quick-dispose occasion
     * </pre>
     *
     * <code>int64 widgetId = 5;</code>
     * @return The widgetId.
     */
    long getWidgetId();

    /**
     * <pre>
     * Alias to andriod's ImageView.ScaleType
     * </pre>
     *
     * <code>int32 scaleType = 6;</code>
     * @return The scaleType.
     */
    int getScaleType();

    /**
     * <code>bool mute = 7;</code>
     * @return The mute.
     */
    boolean getMute();

    /**
     * <code>int32 loopCount = 8;</code>
     * @return The loopCount.
     */
    int getLoopCount();

    /**
     * <pre>
     * Where resume the animation, from frame where it's paused
     * or the first frame. If it's `true`, it should continue to
     * play next frame from where it's paused
     * </pre>
     *
     * <code>bool continualResume = 9;</code>
     * @return The continualResume.
     */
    boolean getContinualResume();
  }
  /**
   * Protobuf type {@code SVGALoadInfo}
   */
  public static final class SVGALoadInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SVGALoadInfo)
      SVGALoadInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SVGALoadInfo.newBuilder() to construct.
    private SVGALoadInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SVGALoadInfo() {
      assetUrl_ = "";
      remoteUrl_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SVGALoadInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SVGALoadInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              assetUrl_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              remoteUrl_ = s;
              break;
            }
            case 25: {

              width_ = input.readDouble();
              break;
            }
            case 33: {

              height_ = input.readDouble();
              break;
            }
            case 40: {

              widgetId_ = input.readInt64();
              break;
            }
            case 48: {

              scaleType_ = input.readInt32();
              break;
            }
            case 56: {

              mute_ = input.readBool();
              break;
            }
            case 64: {

              loopCount_ = input.readInt32();
              break;
            }
            case 72: {

              continualResume_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_SVGALoadInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_SVGALoadInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo.class, com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo.Builder.class);
    }

    public static final int ASSETURL_FIELD_NUMBER = 1;
    private volatile java.lang.Object assetUrl_;
    /**
     * <pre>
     * Exclusive with remoteUrl
     * </pre>
     *
     * <code>string assetUrl = 1;</code>
     * @return The assetUrl.
     */
    @java.lang.Override
    public java.lang.String getAssetUrl() {
      java.lang.Object ref = assetUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        assetUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Exclusive with remoteUrl
     * </pre>
     *
     * <code>string assetUrl = 1;</code>
     * @return The bytes for assetUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAssetUrlBytes() {
      java.lang.Object ref = assetUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        assetUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REMOTEURL_FIELD_NUMBER = 2;
    private volatile java.lang.Object remoteUrl_;
    /**
     * <pre>
     * Exclusive with assetUrl
     * </pre>
     *
     * <code>string remoteUrl = 2;</code>
     * @return The remoteUrl.
     */
    @java.lang.Override
    public java.lang.String getRemoteUrl() {
      java.lang.Object ref = remoteUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        remoteUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Exclusive with assetUrl
     * </pre>
     *
     * <code>string remoteUrl = 2;</code>
     * @return The bytes for remoteUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRemoteUrlBytes() {
      java.lang.Object ref = remoteUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        remoteUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WIDTH_FIELD_NUMBER = 3;
    private double width_;
    /**
     * <code>double width = 3;</code>
     * @return The width.
     */
    @java.lang.Override
    public double getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private double height_;
    /**
     * <code>double height = 4;</code>
     * @return The height.
     */
    @java.lang.Override
    public double getHeight() {
      return height_;
    }

    public static final int WIDGETID_FIELD_NUMBER = 5;
    private long widgetId_;
    /**
     * <pre>
     * Created on Flutter side and should be unique accross all
     * SVGA widgets, used to handle quick-dispose occasion
     * </pre>
     *
     * <code>int64 widgetId = 5;</code>
     * @return The widgetId.
     */
    @java.lang.Override
    public long getWidgetId() {
      return widgetId_;
    }

    public static final int SCALETYPE_FIELD_NUMBER = 6;
    private int scaleType_;
    /**
     * <pre>
     * Alias to andriod's ImageView.ScaleType
     * </pre>
     *
     * <code>int32 scaleType = 6;</code>
     * @return The scaleType.
     */
    @java.lang.Override
    public int getScaleType() {
      return scaleType_;
    }

    public static final int MUTE_FIELD_NUMBER = 7;
    private boolean mute_;
    /**
     * <code>bool mute = 7;</code>
     * @return The mute.
     */
    @java.lang.Override
    public boolean getMute() {
      return mute_;
    }

    public static final int LOOPCOUNT_FIELD_NUMBER = 8;
    private int loopCount_;
    /**
     * <code>int32 loopCount = 8;</code>
     * @return The loopCount.
     */
    @java.lang.Override
    public int getLoopCount() {
      return loopCount_;
    }

    public static final int CONTINUALRESUME_FIELD_NUMBER = 9;
    private boolean continualResume_;
    /**
     * <pre>
     * Where resume the animation, from frame where it's paused
     * or the first frame. If it's `true`, it should continue to
     * play next frame from where it's paused
     * </pre>
     *
     * <code>bool continualResume = 9;</code>
     * @return The continualResume.
     */
    @java.lang.Override
    public boolean getContinualResume() {
      return continualResume_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAssetUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, assetUrl_);
      }
      if (!getRemoteUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, remoteUrl_);
      }
      if (width_ != 0D) {
        output.writeDouble(3, width_);
      }
      if (height_ != 0D) {
        output.writeDouble(4, height_);
      }
      if (widgetId_ != 0L) {
        output.writeInt64(5, widgetId_);
      }
      if (scaleType_ != 0) {
        output.writeInt32(6, scaleType_);
      }
      if (mute_ != false) {
        output.writeBool(7, mute_);
      }
      if (loopCount_ != 0) {
        output.writeInt32(8, loopCount_);
      }
      if (continualResume_ != false) {
        output.writeBool(9, continualResume_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAssetUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, assetUrl_);
      }
      if (!getRemoteUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, remoteUrl_);
      }
      if (width_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, width_);
      }
      if (height_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, height_);
      }
      if (widgetId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, widgetId_);
      }
      if (scaleType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, scaleType_);
      }
      if (mute_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, mute_);
      }
      if (loopCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, loopCount_);
      }
      if (continualResume_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, continualResume_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo other = (com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo) obj;

      if (!getAssetUrl()
          .equals(other.getAssetUrl())) return false;
      if (!getRemoteUrl()
          .equals(other.getRemoteUrl())) return false;
      if (java.lang.Double.doubleToLongBits(getWidth())
          != java.lang.Double.doubleToLongBits(
              other.getWidth())) return false;
      if (java.lang.Double.doubleToLongBits(getHeight())
          != java.lang.Double.doubleToLongBits(
              other.getHeight())) return false;
      if (getWidgetId()
          != other.getWidgetId()) return false;
      if (getScaleType()
          != other.getScaleType()) return false;
      if (getMute()
          != other.getMute()) return false;
      if (getLoopCount()
          != other.getLoopCount()) return false;
      if (getContinualResume()
          != other.getContinualResume()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ASSETURL_FIELD_NUMBER;
      hash = (53 * hash) + getAssetUrl().hashCode();
      hash = (37 * hash) + REMOTEURL_FIELD_NUMBER;
      hash = (53 * hash) + getRemoteUrl().hashCode();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWidth()));
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeight()));
      hash = (37 * hash) + WIDGETID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getWidgetId());
      hash = (37 * hash) + SCALETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getScaleType();
      hash = (37 * hash) + MUTE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMute());
      hash = (37 * hash) + LOOPCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getLoopCount();
      hash = (37 * hash) + CONTINUALRESUME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getContinualResume());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SVGALoadInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SVGALoadInfo)
        com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_SVGALoadInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_SVGALoadInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo.class, com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        assetUrl_ = "";

        remoteUrl_ = "";

        width_ = 0D;

        height_ = 0D;

        widgetId_ = 0L;

        scaleType_ = 0;

        mute_ = false;

        loopCount_ = 0;

        continualResume_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_SVGALoadInfo_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo build() {
        com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo buildPartial() {
        com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo result = new com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo(this);
        result.assetUrl_ = assetUrl_;
        result.remoteUrl_ = remoteUrl_;
        result.width_ = width_;
        result.height_ = height_;
        result.widgetId_ = widgetId_;
        result.scaleType_ = scaleType_;
        result.mute_ = mute_;
        result.loopCount_ = loopCount_;
        result.continualResume_ = continualResume_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo) {
          return mergeFrom((com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo other) {
        if (other == com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo.getDefaultInstance()) return this;
        if (!other.getAssetUrl().isEmpty()) {
          assetUrl_ = other.assetUrl_;
          onChanged();
        }
        if (!other.getRemoteUrl().isEmpty()) {
          remoteUrl_ = other.remoteUrl_;
          onChanged();
        }
        if (other.getWidth() != 0D) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0D) {
          setHeight(other.getHeight());
        }
        if (other.getWidgetId() != 0L) {
          setWidgetId(other.getWidgetId());
        }
        if (other.getScaleType() != 0) {
          setScaleType(other.getScaleType());
        }
        if (other.getMute() != false) {
          setMute(other.getMute());
        }
        if (other.getLoopCount() != 0) {
          setLoopCount(other.getLoopCount());
        }
        if (other.getContinualResume() != false) {
          setContinualResume(other.getContinualResume());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object assetUrl_ = "";
      /**
       * <pre>
       * Exclusive with remoteUrl
       * </pre>
       *
       * <code>string assetUrl = 1;</code>
       * @return The assetUrl.
       */
      public java.lang.String getAssetUrl() {
        java.lang.Object ref = assetUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          assetUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Exclusive with remoteUrl
       * </pre>
       *
       * <code>string assetUrl = 1;</code>
       * @return The bytes for assetUrl.
       */
      public com.google.protobuf.ByteString
          getAssetUrlBytes() {
        java.lang.Object ref = assetUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          assetUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Exclusive with remoteUrl
       * </pre>
       *
       * <code>string assetUrl = 1;</code>
       * @param value The assetUrl to set.
       * @return This builder for chaining.
       */
      public Builder setAssetUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        assetUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Exclusive with remoteUrl
       * </pre>
       *
       * <code>string assetUrl = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssetUrl() {
        
        assetUrl_ = getDefaultInstance().getAssetUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Exclusive with remoteUrl
       * </pre>
       *
       * <code>string assetUrl = 1;</code>
       * @param value The bytes for assetUrl to set.
       * @return This builder for chaining.
       */
      public Builder setAssetUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        assetUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object remoteUrl_ = "";
      /**
       * <pre>
       * Exclusive with assetUrl
       * </pre>
       *
       * <code>string remoteUrl = 2;</code>
       * @return The remoteUrl.
       */
      public java.lang.String getRemoteUrl() {
        java.lang.Object ref = remoteUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          remoteUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Exclusive with assetUrl
       * </pre>
       *
       * <code>string remoteUrl = 2;</code>
       * @return The bytes for remoteUrl.
       */
      public com.google.protobuf.ByteString
          getRemoteUrlBytes() {
        java.lang.Object ref = remoteUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          remoteUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Exclusive with assetUrl
       * </pre>
       *
       * <code>string remoteUrl = 2;</code>
       * @param value The remoteUrl to set.
       * @return This builder for chaining.
       */
      public Builder setRemoteUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        remoteUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Exclusive with assetUrl
       * </pre>
       *
       * <code>string remoteUrl = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemoteUrl() {
        
        remoteUrl_ = getDefaultInstance().getRemoteUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Exclusive with assetUrl
       * </pre>
       *
       * <code>string remoteUrl = 2;</code>
       * @param value The bytes for remoteUrl to set.
       * @return This builder for chaining.
       */
      public Builder setRemoteUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        remoteUrl_ = value;
        onChanged();
        return this;
      }

      private double width_ ;
      /**
       * <code>double width = 3;</code>
       * @return The width.
       */
      @java.lang.Override
      public double getWidth() {
        return width_;
      }
      /**
       * <code>double width = 3;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(double value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double width = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0D;
        onChanged();
        return this;
      }

      private double height_ ;
      /**
       * <code>double height = 4;</code>
       * @return The height.
       */
      @java.lang.Override
      public double getHeight() {
        return height_;
      }
      /**
       * <code>double height = 4;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(double value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double height = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0D;
        onChanged();
        return this;
      }

      private long widgetId_ ;
      /**
       * <pre>
       * Created on Flutter side and should be unique accross all
       * SVGA widgets, used to handle quick-dispose occasion
       * </pre>
       *
       * <code>int64 widgetId = 5;</code>
       * @return The widgetId.
       */
      @java.lang.Override
      public long getWidgetId() {
        return widgetId_;
      }
      /**
       * <pre>
       * Created on Flutter side and should be unique accross all
       * SVGA widgets, used to handle quick-dispose occasion
       * </pre>
       *
       * <code>int64 widgetId = 5;</code>
       * @param value The widgetId to set.
       * @return This builder for chaining.
       */
      public Builder setWidgetId(long value) {
        
        widgetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Created on Flutter side and should be unique accross all
       * SVGA widgets, used to handle quick-dispose occasion
       * </pre>
       *
       * <code>int64 widgetId = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidgetId() {
        
        widgetId_ = 0L;
        onChanged();
        return this;
      }

      private int scaleType_ ;
      /**
       * <pre>
       * Alias to andriod's ImageView.ScaleType
       * </pre>
       *
       * <code>int32 scaleType = 6;</code>
       * @return The scaleType.
       */
      @java.lang.Override
      public int getScaleType() {
        return scaleType_;
      }
      /**
       * <pre>
       * Alias to andriod's ImageView.ScaleType
       * </pre>
       *
       * <code>int32 scaleType = 6;</code>
       * @param value The scaleType to set.
       * @return This builder for chaining.
       */
      public Builder setScaleType(int value) {
        
        scaleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alias to andriod's ImageView.ScaleType
       * </pre>
       *
       * <code>int32 scaleType = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearScaleType() {
        
        scaleType_ = 0;
        onChanged();
        return this;
      }

      private boolean mute_ ;
      /**
       * <code>bool mute = 7;</code>
       * @return The mute.
       */
      @java.lang.Override
      public boolean getMute() {
        return mute_;
      }
      /**
       * <code>bool mute = 7;</code>
       * @param value The mute to set.
       * @return This builder for chaining.
       */
      public Builder setMute(boolean value) {
        
        mute_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool mute = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMute() {
        
        mute_ = false;
        onChanged();
        return this;
      }

      private int loopCount_ ;
      /**
       * <code>int32 loopCount = 8;</code>
       * @return The loopCount.
       */
      @java.lang.Override
      public int getLoopCount() {
        return loopCount_;
      }
      /**
       * <code>int32 loopCount = 8;</code>
       * @param value The loopCount to set.
       * @return This builder for chaining.
       */
      public Builder setLoopCount(int value) {
        
        loopCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 loopCount = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLoopCount() {
        
        loopCount_ = 0;
        onChanged();
        return this;
      }

      private boolean continualResume_ ;
      /**
       * <pre>
       * Where resume the animation, from frame where it's paused
       * or the first frame. If it's `true`, it should continue to
       * play next frame from where it's paused
       * </pre>
       *
       * <code>bool continualResume = 9;</code>
       * @return The continualResume.
       */
      @java.lang.Override
      public boolean getContinualResume() {
        return continualResume_;
      }
      /**
       * <pre>
       * Where resume the animation, from frame where it's paused
       * or the first frame. If it's `true`, it should continue to
       * play next frame from where it's paused
       * </pre>
       *
       * <code>bool continualResume = 9;</code>
       * @param value The continualResume to set.
       * @return This builder for chaining.
       */
      public Builder setContinualResume(boolean value) {
        
        continualResume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Where resume the animation, from frame where it's paused
       * or the first frame. If it's `true`, it should continue to
       * play next frame from where it's paused
       * </pre>
       *
       * <code>bool continualResume = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearContinualResume() {
        
        continualResume_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SVGALoadInfo)
    }

    // @@protoc_insertion_point(class_scope:SVGALoadInfo)
    private static final com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo();
    }

    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SVGALoadInfo>
        PARSER = new com.google.protobuf.AbstractParser<SVGALoadInfo>() {
      @java.lang.Override
      public SVGALoadInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SVGALoadInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SVGALoadInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SVGALoadInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.proto.SvgaInfo.SVGALoadInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResultInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ResultInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 code = 1;</code>
     * @return The code.
     */
    int getCode();

    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <pre>
     * Available when invoke a load function, and shall all be
     * -1 if it's not. when it's less than 0, it shouldn't be
     * uesed to construct Texture widget in Flutter
     * </pre>
     *
     * <code>int64 textureId = 3;</code>
     * @return The textureId.
     */
    long getTextureId();
  }
  /**
   * Protobuf type {@code ResultInfo}
   */
  public static final class ResultInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ResultInfo)
      ResultInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ResultInfo.newBuilder() to construct.
    private ResultInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResultInfo() {
      message_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ResultInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ResultInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              code_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            case 24: {

              textureId_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_ResultInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_ResultInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo.class, com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>int32 code = 1;</code>
     * @return The code.
     */
    @java.lang.Override
    public int getCode() {
      return code_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXTUREID_FIELD_NUMBER = 3;
    private long textureId_;
    /**
     * <pre>
     * Available when invoke a load function, and shall all be
     * -1 if it's not. when it's less than 0, it shouldn't be
     * uesed to construct Texture widget in Flutter
     * </pre>
     *
     * <code>int64 textureId = 3;</code>
     * @return The textureId.
     */
    @java.lang.Override
    public long getTextureId() {
      return textureId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != 0) {
        output.writeInt32(1, code_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
      if (textureId_ != 0L) {
        output.writeInt64(3, textureId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      if (textureId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, textureId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo other = (com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo) obj;

      if (getCode()
          != other.getCode()) return false;
      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (getTextureId()
          != other.getTextureId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (37 * hash) + TEXTUREID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTextureId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ResultInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ResultInfo)
        com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_ResultInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_ResultInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo.class, com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        code_ = 0;

        message_ = "";

        textureId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.proto.SvgaInfo.internal_static_ResultInfo_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo build() {
        com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo buildPartial() {
        com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo result = new com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo(this);
        result.code_ = code_;
        result.message_ = message_;
        result.textureId_ = textureId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo) {
          return mergeFrom((com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo other) {
        if (other == com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo.getDefaultInstance()) return this;
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        if (other.getTextureId() != 0L) {
          setTextureId(other.getTextureId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ ;
      /**
       * <code>int32 code = 1;</code>
       * @return The code.
       */
      @java.lang.Override
      public int getCode() {
        return code_;
      }
      /**
       * <code>int32 code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 2;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }

      private long textureId_ ;
      /**
       * <pre>
       * Available when invoke a load function, and shall all be
       * -1 if it's not. when it's less than 0, it shouldn't be
       * uesed to construct Texture widget in Flutter
       * </pre>
       *
       * <code>int64 textureId = 3;</code>
       * @return The textureId.
       */
      @java.lang.Override
      public long getTextureId() {
        return textureId_;
      }
      /**
       * <pre>
       * Available when invoke a load function, and shall all be
       * -1 if it's not. when it's less than 0, it shouldn't be
       * uesed to construct Texture widget in Flutter
       * </pre>
       *
       * <code>int64 textureId = 3;</code>
       * @param value The textureId to set.
       * @return This builder for chaining.
       */
      public Builder setTextureId(long value) {
        
        textureId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Available when invoke a load function, and shall all be
       * -1 if it's not. when it's less than 0, it shouldn't be
       * uesed to construct Texture widget in Flutter
       * </pre>
       *
       * <code>int64 textureId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTextureId() {
        
        textureId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ResultInfo)
    }

    // @@protoc_insertion_point(class_scope:ResultInfo)
    private static final com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo();
    }

    public static com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResultInfo>
        PARSER = new com.google.protobuf.AbstractParser<ResultInfo>() {
      @java.lang.Override
      public ResultInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResultInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResultInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResultInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.proto.SvgaInfo.ResultInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SVGALoadInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SVGALoadInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ResultInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ResultInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017svga_info.proto\"\261\001\n\014SVGALoadInfo\022\020\n\010as" +
      "setUrl\030\001 \001(\t\022\021\n\tremoteUrl\030\002 \001(\t\022\r\n\005width" +
      "\030\003 \001(\001\022\016\n\006height\030\004 \001(\001\022\020\n\010widgetId\030\005 \001(\003" +
      "\022\021\n\tscaleType\030\006 \001(\005\022\014\n\004mute\030\007 \001(\010\022\021\n\tloo" +
      "pCount\030\010 \001(\005\022\027\n\017continualResume\030\t \001(\010\">\n" +
      "\nResultInfo\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001" +
      "(\t\022\021\n\ttextureId\030\003 \001(\003B#\n!com.svga.plugin" +
      ".svga_plugin.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_SVGALoadInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SVGALoadInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SVGALoadInfo_descriptor,
        new java.lang.String[] { "AssetUrl", "RemoteUrl", "Width", "Height", "WidgetId", "ScaleType", "Mute", "LoopCount", "ContinualResume", });
    internal_static_ResultInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ResultInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ResultInfo_descriptor,
        new java.lang.String[] { "Code", "Message", "TextureId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
