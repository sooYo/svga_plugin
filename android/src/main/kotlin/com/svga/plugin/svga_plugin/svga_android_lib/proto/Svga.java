// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: svga.proto

package com.svga.plugin.svga_plugin.svga_android_lib.proto;

public final class Svga {
  private Svga() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MovieParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.opensource.svga.MovieParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 画布宽
     * </pre>
     *
     * <code>float viewBoxWidth = 1;</code>
     * @return The viewBoxWidth.
     */
    float getViewBoxWidth();

    /**
     * <pre>
     * 画布高
     * </pre>
     *
     * <code>float viewBoxHeight = 2;</code>
     * @return The viewBoxHeight.
     */
    float getViewBoxHeight();

    /**
     * <pre>
     * 动画每秒播放帧数，合法值是 [1, 2, 3, 5, 6, 10, 12, 15, 20, 30, 60] 中的任意一个。
     * </pre>
     *
     * <code>int32 fps = 3;</code>
     * @return The fps.
     */
    int getFps();

    /**
     * <pre>
     * 动画总帧数
     * </pre>
     *
     * <code>int32 frames = 4;</code>
     * @return The frames.
     */
    int getFrames();
  }
  /**
   * Protobuf type {@code com.opensource.svga.MovieParams}
   */
  public static final class MovieParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.opensource.svga.MovieParams)
      MovieParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MovieParams.newBuilder() to construct.
    private MovieParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MovieParams() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MovieParams();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MovieParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              viewBoxWidth_ = input.readFloat();
              break;
            }
            case 21: {

              viewBoxHeight_ = input.readFloat();
              break;
            }
            case 24: {

              fps_ = input.readInt32();
              break;
            }
            case 32: {

              frames_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.Builder.class);
    }

    public static final int VIEWBOXWIDTH_FIELD_NUMBER = 1;
    private float viewBoxWidth_;
    /**
     * <pre>
     * 画布宽
     * </pre>
     *
     * <code>float viewBoxWidth = 1;</code>
     * @return The viewBoxWidth.
     */
    @java.lang.Override
    public float getViewBoxWidth() {
      return viewBoxWidth_;
    }

    public static final int VIEWBOXHEIGHT_FIELD_NUMBER = 2;
    private float viewBoxHeight_;
    /**
     * <pre>
     * 画布高
     * </pre>
     *
     * <code>float viewBoxHeight = 2;</code>
     * @return The viewBoxHeight.
     */
    @java.lang.Override
    public float getViewBoxHeight() {
      return viewBoxHeight_;
    }

    public static final int FPS_FIELD_NUMBER = 3;
    private int fps_;
    /**
     * <pre>
     * 动画每秒播放帧数，合法值是 [1, 2, 3, 5, 6, 10, 12, 15, 20, 30, 60] 中的任意一个。
     * </pre>
     *
     * <code>int32 fps = 3;</code>
     * @return The fps.
     */
    @java.lang.Override
    public int getFps() {
      return fps_;
    }

    public static final int FRAMES_FIELD_NUMBER = 4;
    private int frames_;
    /**
     * <pre>
     * 动画总帧数
     * </pre>
     *
     * <code>int32 frames = 4;</code>
     * @return The frames.
     */
    @java.lang.Override
    public int getFrames() {
      return frames_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (viewBoxWidth_ != 0F) {
        output.writeFloat(1, viewBoxWidth_);
      }
      if (viewBoxHeight_ != 0F) {
        output.writeFloat(2, viewBoxHeight_);
      }
      if (fps_ != 0) {
        output.writeInt32(3, fps_);
      }
      if (frames_ != 0) {
        output.writeInt32(4, frames_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (viewBoxWidth_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, viewBoxWidth_);
      }
      if (viewBoxHeight_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, viewBoxHeight_);
      }
      if (fps_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, fps_);
      }
      if (frames_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, frames_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams) obj;

      if (java.lang.Float.floatToIntBits(getViewBoxWidth())
          != java.lang.Float.floatToIntBits(
              other.getViewBoxWidth())) return false;
      if (java.lang.Float.floatToIntBits(getViewBoxHeight())
          != java.lang.Float.floatToIntBits(
              other.getViewBoxHeight())) return false;
      if (getFps()
          != other.getFps()) return false;
      if (getFrames()
          != other.getFrames()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VIEWBOXWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getViewBoxWidth());
      hash = (37 * hash) + VIEWBOXHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getViewBoxHeight());
      hash = (37 * hash) + FPS_FIELD_NUMBER;
      hash = (53 * hash) + getFps();
      hash = (37 * hash) + FRAMES_FIELD_NUMBER;
      hash = (53 * hash) + getFrames();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.opensource.svga.MovieParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.opensource.svga.MovieParams)
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieParams_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.Svga.MovieParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        viewBoxWidth_ = 0F;

        viewBoxHeight_ = 0F;

        fps_ = 0;

        frames_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieParams_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams build() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams buildPartial() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams(this);
        result.viewBoxWidth_ = viewBoxWidth_;
        result.viewBoxHeight_ = viewBoxHeight_;
        result.fps_ = fps_;
        result.frames_ = frames_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams) {
          return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams other) {
        if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.getDefaultInstance()) return this;
        if (other.getViewBoxWidth() != 0F) {
          setViewBoxWidth(other.getViewBoxWidth());
        }
        if (other.getViewBoxHeight() != 0F) {
          setViewBoxHeight(other.getViewBoxHeight());
        }
        if (other.getFps() != 0) {
          setFps(other.getFps());
        }
        if (other.getFrames() != 0) {
          setFrames(other.getFrames());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float viewBoxWidth_ ;
      /**
       * <pre>
       * 画布宽
       * </pre>
       *
       * <code>float viewBoxWidth = 1;</code>
       * @return The viewBoxWidth.
       */
      @java.lang.Override
      public float getViewBoxWidth() {
        return viewBoxWidth_;
      }
      /**
       * <pre>
       * 画布宽
       * </pre>
       *
       * <code>float viewBoxWidth = 1;</code>
       * @param value The viewBoxWidth to set.
       * @return This builder for chaining.
       */
      public Builder setViewBoxWidth(float value) {
        
        viewBoxWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 画布宽
       * </pre>
       *
       * <code>float viewBoxWidth = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearViewBoxWidth() {
        
        viewBoxWidth_ = 0F;
        onChanged();
        return this;
      }

      private float viewBoxHeight_ ;
      /**
       * <pre>
       * 画布高
       * </pre>
       *
       * <code>float viewBoxHeight = 2;</code>
       * @return The viewBoxHeight.
       */
      @java.lang.Override
      public float getViewBoxHeight() {
        return viewBoxHeight_;
      }
      /**
       * <pre>
       * 画布高
       * </pre>
       *
       * <code>float viewBoxHeight = 2;</code>
       * @param value The viewBoxHeight to set.
       * @return This builder for chaining.
       */
      public Builder setViewBoxHeight(float value) {
        
        viewBoxHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 画布高
       * </pre>
       *
       * <code>float viewBoxHeight = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearViewBoxHeight() {
        
        viewBoxHeight_ = 0F;
        onChanged();
        return this;
      }

      private int fps_ ;
      /**
       * <pre>
       * 动画每秒播放帧数，合法值是 [1, 2, 3, 5, 6, 10, 12, 15, 20, 30, 60] 中的任意一个。
       * </pre>
       *
       * <code>int32 fps = 3;</code>
       * @return The fps.
       */
      @java.lang.Override
      public int getFps() {
        return fps_;
      }
      /**
       * <pre>
       * 动画每秒播放帧数，合法值是 [1, 2, 3, 5, 6, 10, 12, 15, 20, 30, 60] 中的任意一个。
       * </pre>
       *
       * <code>int32 fps = 3;</code>
       * @param value The fps to set.
       * @return This builder for chaining.
       */
      public Builder setFps(int value) {
        
        fps_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 动画每秒播放帧数，合法值是 [1, 2, 3, 5, 6, 10, 12, 15, 20, 30, 60] 中的任意一个。
       * </pre>
       *
       * <code>int32 fps = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFps() {
        
        fps_ = 0;
        onChanged();
        return this;
      }

      private int frames_ ;
      /**
       * <pre>
       * 动画总帧数
       * </pre>
       *
       * <code>int32 frames = 4;</code>
       * @return The frames.
       */
      @java.lang.Override
      public int getFrames() {
        return frames_;
      }
      /**
       * <pre>
       * 动画总帧数
       * </pre>
       *
       * <code>int32 frames = 4;</code>
       * @param value The frames to set.
       * @return This builder for chaining.
       */
      public Builder setFrames(int value) {
        
        frames_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 动画总帧数
       * </pre>
       *
       * <code>int32 frames = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrames() {
        
        frames_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.opensource.svga.MovieParams)
    }

    // @@protoc_insertion_point(class_scope:com.opensource.svga.MovieParams)
    private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams();
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MovieParams>
        PARSER = new com.google.protobuf.AbstractParser<MovieParams>() {
      @java.lang.Override
      public MovieParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MovieParams(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MovieParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MovieParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpriteEntityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.opensource.svga.SpriteEntity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
     * </pre>
     *
     * <code>string imageKey = 1;</code>
     * @return The imageKey.
     */
    java.lang.String getImageKey();
    /**
     * <pre>
     * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
     * </pre>
     *
     * <code>string imageKey = 1;</code>
     * @return The bytes for imageKey.
     */
    com.google.protobuf.ByteString
        getImageKeyBytes();

    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity>
        getFramesList();
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity getFrames(int index);
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    int getFramesCount();
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder>
        getFramesOrBuilderList();
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder getFramesOrBuilder(
        int index);

    /**
     * <pre>
     * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
     * </pre>
     *
     * <code>string matteKey = 3;</code>
     * @return The matteKey.
     */
    java.lang.String getMatteKey();
    /**
     * <pre>
     * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
     * </pre>
     *
     * <code>string matteKey = 3;</code>
     * @return The bytes for matteKey.
     */
    com.google.protobuf.ByteString
        getMatteKeyBytes();
  }
  /**
   * Protobuf type {@code com.opensource.svga.SpriteEntity}
   */
  public static final class SpriteEntity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.opensource.svga.SpriteEntity)
      SpriteEntityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SpriteEntity.newBuilder() to construct.
    private SpriteEntity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpriteEntity() {
      imageKey_ = "";
      frames_ = java.util.Collections.emptyList();
      matteKey_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SpriteEntity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpriteEntity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              imageKey_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                frames_ = new java.util.ArrayList<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity>();
                mutable_bitField0_ |= 0x00000001;
              }
              frames_.add(
                  input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.parser(), extensionRegistry));
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              matteKey_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          frames_ = java.util.Collections.unmodifiableList(frames_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_SpriteEntity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_SpriteEntity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder.class);
    }

    public static final int IMAGEKEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object imageKey_;
    /**
     * <pre>
     * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
     * </pre>
     *
     * <code>string imageKey = 1;</code>
     * @return The imageKey.
     */
    @java.lang.Override
    public java.lang.String getImageKey() {
      java.lang.Object ref = imageKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        imageKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
     * </pre>
     *
     * <code>string imageKey = 1;</code>
     * @return The bytes for imageKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getImageKeyBytes() {
      java.lang.Object ref = imageKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        imageKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FRAMES_FIELD_NUMBER = 2;
    private java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity> frames_;
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity> getFramesList() {
      return frames_;
    }
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder>
        getFramesOrBuilderList() {
      return frames_;
    }
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    @java.lang.Override
    public int getFramesCount() {
      return frames_.size();
    }
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity getFrames(int index) {
      return frames_.get(index);
    }
    /**
     * <pre>
     * 帧列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder getFramesOrBuilder(
        int index) {
      return frames_.get(index);
    }

    public static final int MATTEKEY_FIELD_NUMBER = 3;
    private volatile java.lang.Object matteKey_;
    /**
     * <pre>
     * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
     * </pre>
     *
     * <code>string matteKey = 3;</code>
     * @return The matteKey.
     */
    @java.lang.Override
    public java.lang.String getMatteKey() {
      java.lang.Object ref = matteKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        matteKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
     * </pre>
     *
     * <code>string matteKey = 3;</code>
     * @return The bytes for matteKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMatteKeyBytes() {
      java.lang.Object ref = matteKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        matteKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getImageKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, imageKey_);
      }
      for (int i = 0; i < frames_.size(); i++) {
        output.writeMessage(2, frames_.get(i));
      }
      if (!getMatteKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, matteKey_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getImageKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, imageKey_);
      }
      for (int i = 0; i < frames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, frames_.get(i));
      }
      if (!getMatteKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, matteKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity) obj;

      if (!getImageKey()
          .equals(other.getImageKey())) return false;
      if (!getFramesList()
          .equals(other.getFramesList())) return false;
      if (!getMatteKey()
          .equals(other.getMatteKey())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMAGEKEY_FIELD_NUMBER;
      hash = (53 * hash) + getImageKey().hashCode();
      if (getFramesCount() > 0) {
        hash = (37 * hash) + FRAMES_FIELD_NUMBER;
        hash = (53 * hash) + getFramesList().hashCode();
      }
      hash = (37 * hash) + MATTEKEY_FIELD_NUMBER;
      hash = (53 * hash) + getMatteKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.opensource.svga.SpriteEntity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.opensource.svga.SpriteEntity)
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_SpriteEntity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_SpriteEntity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.Svga.SpriteEntity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFramesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        imageKey_ = "";

        if (framesBuilder_ == null) {
          frames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          framesBuilder_.clear();
        }
        matteKey_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_SpriteEntity_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity build() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity buildPartial() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity(this);
        int from_bitField0_ = bitField0_;
        result.imageKey_ = imageKey_;
        if (framesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            frames_ = java.util.Collections.unmodifiableList(frames_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.frames_ = frames_;
        } else {
          result.frames_ = framesBuilder_.build();
        }
        result.matteKey_ = matteKey_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity) {
          return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity other) {
        if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.getDefaultInstance()) return this;
        if (!other.getImageKey().isEmpty()) {
          imageKey_ = other.imageKey_;
          onChanged();
        }
        if (framesBuilder_ == null) {
          if (!other.frames_.isEmpty()) {
            if (frames_.isEmpty()) {
              frames_ = other.frames_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFramesIsMutable();
              frames_.addAll(other.frames_);
            }
            onChanged();
          }
        } else {
          if (!other.frames_.isEmpty()) {
            if (framesBuilder_.isEmpty()) {
              framesBuilder_.dispose();
              framesBuilder_ = null;
              frames_ = other.frames_;
              bitField0_ = (bitField0_ & ~0x00000001);
              framesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFramesFieldBuilder() : null;
            } else {
              framesBuilder_.addAllMessages(other.frames_);
            }
          }
        }
        if (!other.getMatteKey().isEmpty()) {
          matteKey_ = other.matteKey_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object imageKey_ = "";
      /**
       * <pre>
       * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
       * </pre>
       *
       * <code>string imageKey = 1;</code>
       * @return The imageKey.
       */
      public java.lang.String getImageKey() {
        java.lang.Object ref = imageKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          imageKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
       * </pre>
       *
       * <code>string imageKey = 1;</code>
       * @return The bytes for imageKey.
       */
      public com.google.protobuf.ByteString
          getImageKeyBytes() {
        java.lang.Object ref = imageKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imageKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
       * </pre>
       *
       * <code>string imageKey = 1;</code>
       * @param value The imageKey to set.
       * @return This builder for chaining.
       */
      public Builder setImageKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        imageKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
       * </pre>
       *
       * <code>string imageKey = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearImageKey() {
        
        imageKey_ = getDefaultInstance().getImageKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层 含有 .matte 后缀，该 sprite 为遮罩图层。
       * </pre>
       *
       * <code>string imageKey = 1;</code>
       * @param value The bytes for imageKey to set.
       * @return This builder for chaining.
       */
      public Builder setImageKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        imageKey_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity> frames_ =
        java.util.Collections.emptyList();
      private void ensureFramesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          frames_ = new java.util.ArrayList<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity>(frames_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder> framesBuilder_;

      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity> getFramesList() {
        if (framesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(frames_);
        } else {
          return framesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public int getFramesCount() {
        if (framesBuilder_ == null) {
          return frames_.size();
        } else {
          return framesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity getFrames(int index) {
        if (framesBuilder_ == null) {
          return frames_.get(index);
        } else {
          return framesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder setFrames(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.set(index, value);
          onChanged();
        } else {
          framesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder setFrames(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.set(index, builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder addFrames(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.add(value);
          onChanged();
        } else {
          framesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder addFrames(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.add(index, value);
          onChanged();
        } else {
          framesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder addFrames(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.add(builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder addFrames(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.add(index, builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder addAllFrames(
          java.lang.Iterable<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity> values) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, frames_);
          onChanged();
        } else {
          framesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder clearFrames() {
        if (framesBuilder_ == null) {
          frames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          framesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public Builder removeFrames(int index) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.remove(index);
          onChanged();
        } else {
          framesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder getFramesBuilder(
          int index) {
        return getFramesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder getFramesOrBuilder(
          int index) {
        if (framesBuilder_ == null) {
          return frames_.get(index);  } else {
          return framesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder>
           getFramesOrBuilderList() {
        if (framesBuilder_ != null) {
          return framesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(frames_);
        }
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder addFramesBuilder() {
        return getFramesFieldBuilder().addBuilder(
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.getDefaultInstance());
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder addFramesBuilder(
          int index) {
        return getFramesFieldBuilder().addBuilder(
            index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.getDefaultInstance());
      }
      /**
       * <pre>
       * 帧列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.FrameEntity frames = 2;</code>
       */
      public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder>
           getFramesBuilderList() {
        return getFramesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder>
          getFramesFieldBuilder() {
        if (framesBuilder_ == null) {
          framesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder>(
                  frames_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          frames_ = null;
        }
        return framesBuilder_;
      }

      private java.lang.Object matteKey_ = "";
      /**
       * <pre>
       * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
       * </pre>
       *
       * <code>string matteKey = 3;</code>
       * @return The matteKey.
       */
      public java.lang.String getMatteKey() {
        java.lang.Object ref = matteKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          matteKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
       * </pre>
       *
       * <code>string matteKey = 3;</code>
       * @return The bytes for matteKey.
       */
      public com.google.protobuf.ByteString
          getMatteKeyBytes() {
        java.lang.Object ref = matteKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          matteKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
       * </pre>
       *
       * <code>string matteKey = 3;</code>
       * @param value The matteKey to set.
       * @return This builder for chaining.
       */
      public Builder setMatteKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        matteKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
       * </pre>
       *
       * <code>string matteKey = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatteKey() {
        
        matteKey_ = getDefaultInstance().getMatteKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 被遮罩图层的 matteKey 对应的是其遮罩图层的 imageKey.
       * </pre>
       *
       * <code>string matteKey = 3;</code>
       * @param value The bytes for matteKey to set.
       * @return This builder for chaining.
       */
      public Builder setMatteKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        matteKey_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.opensource.svga.SpriteEntity)
    }

    // @@protoc_insertion_point(class_scope:com.opensource.svga.SpriteEntity)
    private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity();
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpriteEntity>
        PARSER = new com.google.protobuf.AbstractParser<SpriteEntity>() {
      @java.lang.Override
      public SpriteEntity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpriteEntity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpriteEntity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpriteEntity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioEntityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.opensource.svga.AudioEntity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 音频文件名
     * </pre>
     *
     * <code>string audioKey = 1;</code>
     * @return The audioKey.
     */
    java.lang.String getAudioKey();
    /**
     * <pre>
     * 音频文件名
     * </pre>
     *
     * <code>string audioKey = 1;</code>
     * @return The bytes for audioKey.
     */
    com.google.protobuf.ByteString
        getAudioKeyBytes();

    /**
     * <pre>
     * 音频播放起始帧
     * </pre>
     *
     * <code>int32 startFrame = 2;</code>
     * @return The startFrame.
     */
    int getStartFrame();

    /**
     * <pre>
     * 音频播放结束帧
     * </pre>
     *
     * <code>int32 endFrame = 3;</code>
     * @return The endFrame.
     */
    int getEndFrame();

    /**
     * <pre>
     * 音频播放起始时间（相对音频长度）
     * </pre>
     *
     * <code>int32 startTime = 4;</code>
     * @return The startTime.
     */
    int getStartTime();

    /**
     * <pre>
     * 音频总长度
     * </pre>
     *
     * <code>int32 totalTime = 5;</code>
     * @return The totalTime.
     */
    int getTotalTime();
  }
  /**
   * Protobuf type {@code com.opensource.svga.AudioEntity}
   */
  public static final class AudioEntity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.opensource.svga.AudioEntity)
      AudioEntityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioEntity.newBuilder() to construct.
    private AudioEntity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioEntity() {
      audioKey_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioEntity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AudioEntity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              audioKey_ = s;
              break;
            }
            case 16: {

              startFrame_ = input.readInt32();
              break;
            }
            case 24: {

              endFrame_ = input.readInt32();
              break;
            }
            case 32: {

              startTime_ = input.readInt32();
              break;
            }
            case 40: {

              totalTime_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_AudioEntity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_AudioEntity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder.class);
    }

    public static final int AUDIOKEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object audioKey_;
    /**
     * <pre>
     * 音频文件名
     * </pre>
     *
     * <code>string audioKey = 1;</code>
     * @return The audioKey.
     */
    @java.lang.Override
    public java.lang.String getAudioKey() {
      java.lang.Object ref = audioKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        audioKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 音频文件名
     * </pre>
     *
     * <code>string audioKey = 1;</code>
     * @return The bytes for audioKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAudioKeyBytes() {
      java.lang.Object ref = audioKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        audioKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STARTFRAME_FIELD_NUMBER = 2;
    private int startFrame_;
    /**
     * <pre>
     * 音频播放起始帧
     * </pre>
     *
     * <code>int32 startFrame = 2;</code>
     * @return The startFrame.
     */
    @java.lang.Override
    public int getStartFrame() {
      return startFrame_;
    }

    public static final int ENDFRAME_FIELD_NUMBER = 3;
    private int endFrame_;
    /**
     * <pre>
     * 音频播放结束帧
     * </pre>
     *
     * <code>int32 endFrame = 3;</code>
     * @return The endFrame.
     */
    @java.lang.Override
    public int getEndFrame() {
      return endFrame_;
    }

    public static final int STARTTIME_FIELD_NUMBER = 4;
    private int startTime_;
    /**
     * <pre>
     * 音频播放起始时间（相对音频长度）
     * </pre>
     *
     * <code>int32 startTime = 4;</code>
     * @return The startTime.
     */
    @java.lang.Override
    public int getStartTime() {
      return startTime_;
    }

    public static final int TOTALTIME_FIELD_NUMBER = 5;
    private int totalTime_;
    /**
     * <pre>
     * 音频总长度
     * </pre>
     *
     * <code>int32 totalTime = 5;</code>
     * @return The totalTime.
     */
    @java.lang.Override
    public int getTotalTime() {
      return totalTime_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAudioKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, audioKey_);
      }
      if (startFrame_ != 0) {
        output.writeInt32(2, startFrame_);
      }
      if (endFrame_ != 0) {
        output.writeInt32(3, endFrame_);
      }
      if (startTime_ != 0) {
        output.writeInt32(4, startTime_);
      }
      if (totalTime_ != 0) {
        output.writeInt32(5, totalTime_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAudioKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, audioKey_);
      }
      if (startFrame_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, startFrame_);
      }
      if (endFrame_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, endFrame_);
      }
      if (startTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, startTime_);
      }
      if (totalTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, totalTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity) obj;

      if (!getAudioKey()
          .equals(other.getAudioKey())) return false;
      if (getStartFrame()
          != other.getStartFrame()) return false;
      if (getEndFrame()
          != other.getEndFrame()) return false;
      if (getStartTime()
          != other.getStartTime()) return false;
      if (getTotalTime()
          != other.getTotalTime()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUDIOKEY_FIELD_NUMBER;
      hash = (53 * hash) + getAudioKey().hashCode();
      hash = (37 * hash) + STARTFRAME_FIELD_NUMBER;
      hash = (53 * hash) + getStartFrame();
      hash = (37 * hash) + ENDFRAME_FIELD_NUMBER;
      hash = (53 * hash) + getEndFrame();
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime();
      hash = (37 * hash) + TOTALTIME_FIELD_NUMBER;
      hash = (53 * hash) + getTotalTime();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.opensource.svga.AudioEntity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.opensource.svga.AudioEntity)
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_AudioEntity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_AudioEntity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.Svga.AudioEntity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        audioKey_ = "";

        startFrame_ = 0;

        endFrame_ = 0;

        startTime_ = 0;

        totalTime_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_AudioEntity_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity build() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity buildPartial() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity(this);
        result.audioKey_ = audioKey_;
        result.startFrame_ = startFrame_;
        result.endFrame_ = endFrame_;
        result.startTime_ = startTime_;
        result.totalTime_ = totalTime_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity) {
          return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity other) {
        if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.getDefaultInstance()) return this;
        if (!other.getAudioKey().isEmpty()) {
          audioKey_ = other.audioKey_;
          onChanged();
        }
        if (other.getStartFrame() != 0) {
          setStartFrame(other.getStartFrame());
        }
        if (other.getEndFrame() != 0) {
          setEndFrame(other.getEndFrame());
        }
        if (other.getStartTime() != 0) {
          setStartTime(other.getStartTime());
        }
        if (other.getTotalTime() != 0) {
          setTotalTime(other.getTotalTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object audioKey_ = "";
      /**
       * <pre>
       * 音频文件名
       * </pre>
       *
       * <code>string audioKey = 1;</code>
       * @return The audioKey.
       */
      public java.lang.String getAudioKey() {
        java.lang.Object ref = audioKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          audioKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 音频文件名
       * </pre>
       *
       * <code>string audioKey = 1;</code>
       * @return The bytes for audioKey.
       */
      public com.google.protobuf.ByteString
          getAudioKeyBytes() {
        java.lang.Object ref = audioKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          audioKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 音频文件名
       * </pre>
       *
       * <code>string audioKey = 1;</code>
       * @param value The audioKey to set.
       * @return This builder for chaining.
       */
      public Builder setAudioKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        audioKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 音频文件名
       * </pre>
       *
       * <code>string audioKey = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAudioKey() {
        
        audioKey_ = getDefaultInstance().getAudioKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 音频文件名
       * </pre>
       *
       * <code>string audioKey = 1;</code>
       * @param value The bytes for audioKey to set.
       * @return This builder for chaining.
       */
      public Builder setAudioKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        audioKey_ = value;
        onChanged();
        return this;
      }

      private int startFrame_ ;
      /**
       * <pre>
       * 音频播放起始帧
       * </pre>
       *
       * <code>int32 startFrame = 2;</code>
       * @return The startFrame.
       */
      @java.lang.Override
      public int getStartFrame() {
        return startFrame_;
      }
      /**
       * <pre>
       * 音频播放起始帧
       * </pre>
       *
       * <code>int32 startFrame = 2;</code>
       * @param value The startFrame to set.
       * @return This builder for chaining.
       */
      public Builder setStartFrame(int value) {
        
        startFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 音频播放起始帧
       * </pre>
       *
       * <code>int32 startFrame = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartFrame() {
        
        startFrame_ = 0;
        onChanged();
        return this;
      }

      private int endFrame_ ;
      /**
       * <pre>
       * 音频播放结束帧
       * </pre>
       *
       * <code>int32 endFrame = 3;</code>
       * @return The endFrame.
       */
      @java.lang.Override
      public int getEndFrame() {
        return endFrame_;
      }
      /**
       * <pre>
       * 音频播放结束帧
       * </pre>
       *
       * <code>int32 endFrame = 3;</code>
       * @param value The endFrame to set.
       * @return This builder for chaining.
       */
      public Builder setEndFrame(int value) {
        
        endFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 音频播放结束帧
       * </pre>
       *
       * <code>int32 endFrame = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndFrame() {
        
        endFrame_ = 0;
        onChanged();
        return this;
      }

      private int startTime_ ;
      /**
       * <pre>
       * 音频播放起始时间（相对音频长度）
       * </pre>
       *
       * <code>int32 startTime = 4;</code>
       * @return The startTime.
       */
      @java.lang.Override
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <pre>
       * 音频播放起始时间（相对音频长度）
       * </pre>
       *
       * <code>int32 startTime = 4;</code>
       * @param value The startTime to set.
       * @return This builder for chaining.
       */
      public Builder setStartTime(int value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 音频播放起始时间（相对音频长度）
       * </pre>
       *
       * <code>int32 startTime = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTime() {
        
        startTime_ = 0;
        onChanged();
        return this;
      }

      private int totalTime_ ;
      /**
       * <pre>
       * 音频总长度
       * </pre>
       *
       * <code>int32 totalTime = 5;</code>
       * @return The totalTime.
       */
      @java.lang.Override
      public int getTotalTime() {
        return totalTime_;
      }
      /**
       * <pre>
       * 音频总长度
       * </pre>
       *
       * <code>int32 totalTime = 5;</code>
       * @param value The totalTime to set.
       * @return This builder for chaining.
       */
      public Builder setTotalTime(int value) {
        
        totalTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 音频总长度
       * </pre>
       *
       * <code>int32 totalTime = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalTime() {
        
        totalTime_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.opensource.svga.AudioEntity)
    }

    // @@protoc_insertion_point(class_scope:com.opensource.svga.AudioEntity)
    private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity();
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioEntity>
        PARSER = new com.google.protobuf.AbstractParser<AudioEntity>() {
      @java.lang.Override
      public AudioEntity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioEntity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AudioEntity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioEntity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LayoutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.opensource.svga.Layout)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    float getY();

    /**
     * <code>float width = 3;</code>
     * @return The width.
     */
    float getWidth();

    /**
     * <code>float height = 4;</code>
     * @return The height.
     */
    float getHeight();
  }
  /**
   * Protobuf type {@code com.opensource.svga.Layout}
   */
  public static final class Layout extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.opensource.svga.Layout)
      LayoutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Layout.newBuilder() to construct.
    private Layout(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Layout() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Layout();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Layout(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              x_ = input.readFloat();
              break;
            }
            case 21: {

              y_ = input.readFloat();
              break;
            }
            case 29: {

              width_ = input.readFloat();
              break;
            }
            case 37: {

              height_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Layout_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Layout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    public static final int WIDTH_FIELD_NUMBER = 3;
    private float width_;
    /**
     * <code>float width = 3;</code>
     * @return The width.
     */
    @java.lang.Override
    public float getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private float height_;
    /**
     * <code>float height = 4;</code>
     * @return The height.
     */
    @java.lang.Override
    public float getHeight() {
      return height_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0F) {
        output.writeFloat(1, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(2, y_);
      }
      if (width_ != 0F) {
        output.writeFloat(3, width_);
      }
      if (height_ != 0F) {
        output.writeFloat(4, height_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (width_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, width_);
      }
      if (height_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, height_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout) obj;

      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getWidth())
          != java.lang.Float.floatToIntBits(
              other.getWidth())) return false;
      if (java.lang.Float.floatToIntBits(getHeight())
          != java.lang.Float.floatToIntBits(
              other.getHeight())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWidth());
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeight());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.opensource.svga.Layout}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.opensource.svga.Layout)
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.LayoutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Layout_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Layout_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.Svga.Layout.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;

        y_ = 0F;

        width_ = 0F;

        height_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Layout_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout build() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout buildPartial() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout(this);
        result.x_ = x_;
        result.y_ = y_;
        result.width_ = width_;
        result.height_ = height_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout) {
          return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout other) {
        if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.getDefaultInstance()) return this;
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getWidth() != 0F) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float width_ ;
      /**
       * <code>float width = 3;</code>
       * @return The width.
       */
      @java.lang.Override
      public float getWidth() {
        return width_;
      }
      /**
       * <code>float width = 3;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(float value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float width = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0F;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <code>float height = 4;</code>
       * @return The height.
       */
      @java.lang.Override
      public float getHeight() {
        return height_;
      }
      /**
       * <code>float height = 4;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float height = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.opensource.svga.Layout)
    }

    // @@protoc_insertion_point(class_scope:com.opensource.svga.Layout)
    private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout();
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Layout>
        PARSER = new com.google.protobuf.AbstractParser<Layout>() {
      @java.lang.Override
      public Layout parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Layout(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Layout> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Layout> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransformOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.opensource.svga.Transform)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float a = 1;</code>
     * @return The a.
     */
    float getA();

    /**
     * <code>float b = 2;</code>
     * @return The b.
     */
    float getB();

    /**
     * <code>float c = 3;</code>
     * @return The c.
     */
    float getC();

    /**
     * <code>float d = 4;</code>
     * @return The d.
     */
    float getD();

    /**
     * <code>float tx = 5;</code>
     * @return The tx.
     */
    float getTx();

    /**
     * <code>float ty = 6;</code>
     * @return The ty.
     */
    float getTy();
  }
  /**
   * Protobuf type {@code com.opensource.svga.Transform}
   */
  public static final class Transform extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.opensource.svga.Transform)
      TransformOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Transform.newBuilder() to construct.
    private Transform(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Transform() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Transform();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Transform(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              a_ = input.readFloat();
              break;
            }
            case 21: {

              b_ = input.readFloat();
              break;
            }
            case 29: {

              c_ = input.readFloat();
              break;
            }
            case 37: {

              d_ = input.readFloat();
              break;
            }
            case 45: {

              tx_ = input.readFloat();
              break;
            }
            case 53: {

              ty_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Transform_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Transform_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder.class);
    }

    public static final int A_FIELD_NUMBER = 1;
    private float a_;
    /**
     * <code>float a = 1;</code>
     * @return The a.
     */
    @java.lang.Override
    public float getA() {
      return a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private float b_;
    /**
     * <code>float b = 2;</code>
     * @return The b.
     */
    @java.lang.Override
    public float getB() {
      return b_;
    }

    public static final int C_FIELD_NUMBER = 3;
    private float c_;
    /**
     * <code>float c = 3;</code>
     * @return The c.
     */
    @java.lang.Override
    public float getC() {
      return c_;
    }

    public static final int D_FIELD_NUMBER = 4;
    private float d_;
    /**
     * <code>float d = 4;</code>
     * @return The d.
     */
    @java.lang.Override
    public float getD() {
      return d_;
    }

    public static final int TX_FIELD_NUMBER = 5;
    private float tx_;
    /**
     * <code>float tx = 5;</code>
     * @return The tx.
     */
    @java.lang.Override
    public float getTx() {
      return tx_;
    }

    public static final int TY_FIELD_NUMBER = 6;
    private float ty_;
    /**
     * <code>float ty = 6;</code>
     * @return The ty.
     */
    @java.lang.Override
    public float getTy() {
      return ty_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (a_ != 0F) {
        output.writeFloat(1, a_);
      }
      if (b_ != 0F) {
        output.writeFloat(2, b_);
      }
      if (c_ != 0F) {
        output.writeFloat(3, c_);
      }
      if (d_ != 0F) {
        output.writeFloat(4, d_);
      }
      if (tx_ != 0F) {
        output.writeFloat(5, tx_);
      }
      if (ty_ != 0F) {
        output.writeFloat(6, ty_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (a_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, a_);
      }
      if (b_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, b_);
      }
      if (c_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, c_);
      }
      if (d_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, d_);
      }
      if (tx_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, tx_);
      }
      if (ty_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, ty_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform) obj;

      if (java.lang.Float.floatToIntBits(getA())
          != java.lang.Float.floatToIntBits(
              other.getA())) return false;
      if (java.lang.Float.floatToIntBits(getB())
          != java.lang.Float.floatToIntBits(
              other.getB())) return false;
      if (java.lang.Float.floatToIntBits(getC())
          != java.lang.Float.floatToIntBits(
              other.getC())) return false;
      if (java.lang.Float.floatToIntBits(getD())
          != java.lang.Float.floatToIntBits(
              other.getD())) return false;
      if (java.lang.Float.floatToIntBits(getTx())
          != java.lang.Float.floatToIntBits(
              other.getTx())) return false;
      if (java.lang.Float.floatToIntBits(getTy())
          != java.lang.Float.floatToIntBits(
              other.getTy())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + A_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getA());
      hash = (37 * hash) + B_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getB());
      hash = (37 * hash) + C_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getC());
      hash = (37 * hash) + D_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getD());
      hash = (37 * hash) + TX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTx());
      hash = (37 * hash) + TY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTy());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.opensource.svga.Transform}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.opensource.svga.Transform)
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Transform_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Transform_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.Svga.Transform.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        a_ = 0F;

        b_ = 0F;

        c_ = 0F;

        d_ = 0F;

        tx_ = 0F;

        ty_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_Transform_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform build() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform buildPartial() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform(this);
        result.a_ = a_;
        result.b_ = b_;
        result.c_ = c_;
        result.d_ = d_;
        result.tx_ = tx_;
        result.ty_ = ty_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform) {
          return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform other) {
        if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.getDefaultInstance()) return this;
        if (other.getA() != 0F) {
          setA(other.getA());
        }
        if (other.getB() != 0F) {
          setB(other.getB());
        }
        if (other.getC() != 0F) {
          setC(other.getC());
        }
        if (other.getD() != 0F) {
          setD(other.getD());
        }
        if (other.getTx() != 0F) {
          setTx(other.getTx());
        }
        if (other.getTy() != 0F) {
          setTy(other.getTy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float a_ ;
      /**
       * <code>float a = 1;</code>
       * @return The a.
       */
      @java.lang.Override
      public float getA() {
        return a_;
      }
      /**
       * <code>float a = 1;</code>
       * @param value The a to set.
       * @return This builder for chaining.
       */
      public Builder setA(float value) {
        
        a_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float a = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearA() {
        
        a_ = 0F;
        onChanged();
        return this;
      }

      private float b_ ;
      /**
       * <code>float b = 2;</code>
       * @return The b.
       */
      @java.lang.Override
      public float getB() {
        return b_;
      }
      /**
       * <code>float b = 2;</code>
       * @param value The b to set.
       * @return This builder for chaining.
       */
      public Builder setB(float value) {
        
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float b = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearB() {
        
        b_ = 0F;
        onChanged();
        return this;
      }

      private float c_ ;
      /**
       * <code>float c = 3;</code>
       * @return The c.
       */
      @java.lang.Override
      public float getC() {
        return c_;
      }
      /**
       * <code>float c = 3;</code>
       * @param value The c to set.
       * @return This builder for chaining.
       */
      public Builder setC(float value) {
        
        c_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float c = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearC() {
        
        c_ = 0F;
        onChanged();
        return this;
      }

      private float d_ ;
      /**
       * <code>float d = 4;</code>
       * @return The d.
       */
      @java.lang.Override
      public float getD() {
        return d_;
      }
      /**
       * <code>float d = 4;</code>
       * @param value The d to set.
       * @return This builder for chaining.
       */
      public Builder setD(float value) {
        
        d_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float d = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearD() {
        
        d_ = 0F;
        onChanged();
        return this;
      }

      private float tx_ ;
      /**
       * <code>float tx = 5;</code>
       * @return The tx.
       */
      @java.lang.Override
      public float getTx() {
        return tx_;
      }
      /**
       * <code>float tx = 5;</code>
       * @param value The tx to set.
       * @return This builder for chaining.
       */
      public Builder setTx(float value) {
        
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float tx = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTx() {
        
        tx_ = 0F;
        onChanged();
        return this;
      }

      private float ty_ ;
      /**
       * <code>float ty = 6;</code>
       * @return The ty.
       */
      @java.lang.Override
      public float getTy() {
        return ty_;
      }
      /**
       * <code>float ty = 6;</code>
       * @param value The ty to set.
       * @return This builder for chaining.
       */
      public Builder setTy(float value) {
        
        ty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float ty = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTy() {
        
        ty_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.opensource.svga.Transform)
    }

    // @@protoc_insertion_point(class_scope:com.opensource.svga.Transform)
    private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform();
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Transform>
        PARSER = new com.google.protobuf.AbstractParser<Transform>() {
      @java.lang.Override
      public Transform parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Transform(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Transform> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Transform> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShapeEntityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.opensource.svga.ShapeEntity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 矢量类型
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * 矢量类型
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
     * @return The type.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType getType();

    /**
     * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
     * @return Whether the shape field is set.
     */
    boolean hasShape();
    /**
     * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
     * @return The shape.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs getShape();
    /**
     * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgsOrBuilder getShapeOrBuilder();

    /**
     * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
     * @return Whether the rect field is set.
     */
    boolean hasRect();
    /**
     * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
     * @return The rect.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs getRect();
    /**
     * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgsOrBuilder getRectOrBuilder();

    /**
     * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
     * @return Whether the ellipse field is set.
     */
    boolean hasEllipse();
    /**
     * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
     * @return The ellipse.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs getEllipse();
    /**
     * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgsOrBuilder getEllipseOrBuilder();

    /**
     * <pre>
     * 渲染参数
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
     * @return Whether the styles field is set.
     */
    boolean hasStyles();
    /**
     * <pre>
     * 渲染参数
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
     * @return The styles.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle getStyles();
    /**
     * <pre>
     * 渲染参数
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyleOrBuilder getStylesOrBuilder();

    /**
     * <pre>
     * 矢量图层 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 11;</code>
     * @return Whether the transform field is set.
     */
    boolean hasTransform();
    /**
     * <pre>
     * 矢量图层 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 11;</code>
     * @return The transform.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getTransform();
    /**
     * <pre>
     * 矢量图层 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 11;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder getTransformOrBuilder();

    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ArgsCase getArgsCase();
  }
  /**
   * Protobuf type {@code com.opensource.svga.ShapeEntity}
   */
  public static final class ShapeEntity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.opensource.svga.ShapeEntity)
      ShapeEntityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ShapeEntity.newBuilder() to construct.
    private ShapeEntity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ShapeEntity() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ShapeEntity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ShapeEntity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.Builder subBuilder = null;
              if (argsCase_ == 2) {
                subBuilder = ((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_).toBuilder();
              }
              args_ =
                  input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_);
                args_ = subBuilder.buildPartial();
              }
              argsCase_ = 2;
              break;
            }
            case 26: {
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.Builder subBuilder = null;
              if (argsCase_ == 3) {
                subBuilder = ((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_).toBuilder();
              }
              args_ =
                  input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_);
                args_ = subBuilder.buildPartial();
              }
              argsCase_ = 3;
              break;
            }
            case 34: {
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.Builder subBuilder = null;
              if (argsCase_ == 4) {
                subBuilder = ((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_).toBuilder();
              }
              args_ =
                  input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_);
                args_ = subBuilder.buildPartial();
              }
              argsCase_ = 4;
              break;
            }
            case 82: {
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.Builder subBuilder = null;
              if (styles_ != null) {
                subBuilder = styles_.toBuilder();
              }
              styles_ = input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(styles_);
                styles_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder subBuilder = null;
              if (transform_ != null) {
                subBuilder = transform_.toBuilder();
              }
              transform_ = input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transform_);
                transform_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder.class);
    }

    /**
     * Protobuf enum {@code com.opensource.svga.ShapeEntity.ShapeType}
     */
    public enum ShapeType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * 路径
       * </pre>
       *
       * <code>SHAPE = 0;</code>
       */
      SHAPE(0),
      /**
       * <pre>
       * 矩形
       * </pre>
       *
       * <code>RECT = 1;</code>
       */
      RECT(1),
      /**
       * <pre>
       * 圆形
       * </pre>
       *
       * <code>ELLIPSE = 2;</code>
       */
      ELLIPSE(2),
      /**
       * <pre>
       * 与前帧一致
       * </pre>
       *
       * <code>KEEP = 3;</code>
       */
      KEEP(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * 路径
       * </pre>
       *
       * <code>SHAPE = 0;</code>
       */
      public static final int SHAPE_VALUE = 0;
      /**
       * <pre>
       * 矩形
       * </pre>
       *
       * <code>RECT = 1;</code>
       */
      public static final int RECT_VALUE = 1;
      /**
       * <pre>
       * 圆形
       * </pre>
       *
       * <code>ELLIPSE = 2;</code>
       */
      public static final int ELLIPSE_VALUE = 2;
      /**
       * <pre>
       * 与前帧一致
       * </pre>
       *
       * <code>KEEP = 3;</code>
       */
      public static final int KEEP_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ShapeType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ShapeType forNumber(int value) {
        switch (value) {
          case 0: return SHAPE;
          case 1: return RECT;
          case 2: return ELLIPSE;
          case 3: return KEEP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ShapeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ShapeType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ShapeType>() {
              public ShapeType findValueByNumber(int number) {
                return ShapeType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.getDescriptor().getEnumTypes().get(0);
      }

      private static final ShapeType[] VALUES = values();

      public static ShapeType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ShapeType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.opensource.svga.ShapeEntity.ShapeType)
    }

    public interface ShapeArgsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.opensource.svga.ShapeEntity.ShapeArgs)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * SVG 路径
       * </pre>
       *
       * <code>string d = 1;</code>
       * @return The d.
       */
      java.lang.String getD();
      /**
       * <pre>
       * SVG 路径
       * </pre>
       *
       * <code>string d = 1;</code>
       * @return The bytes for d.
       */
      com.google.protobuf.ByteString
          getDBytes();
    }
    /**
     * Protobuf type {@code com.opensource.svga.ShapeEntity.ShapeArgs}
     */
    public static final class ShapeArgs extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.opensource.svga.ShapeEntity.ShapeArgs)
        ShapeArgsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ShapeArgs.newBuilder() to construct.
      private ShapeArgs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ShapeArgs() {
        d_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ShapeArgs();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ShapeArgs(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                d_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.Builder.class);
      }

      public static final int D_FIELD_NUMBER = 1;
      private volatile java.lang.Object d_;
      /**
       * <pre>
       * SVG 路径
       * </pre>
       *
       * <code>string d = 1;</code>
       * @return The d.
       */
      @java.lang.Override
      public java.lang.String getD() {
        java.lang.Object ref = d_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          d_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * SVG 路径
       * </pre>
       *
       * <code>string d = 1;</code>
       * @return The bytes for d.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDBytes() {
        java.lang.Object ref = d_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          d_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getDBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, d_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getDBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, d_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs)) {
          return super.equals(obj);
        }
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) obj;

        if (!getD()
            .equals(other.getD())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + D_FIELD_NUMBER;
        hash = (53 * hash) + getD().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.opensource.svga.ShapeEntity.ShapeArgs}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.opensource.svga.ShapeEntity.ShapeArgs)
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.Builder.class);
        }

        // Construct using com.svga.plugin.svga_plugin.proto.Svga.ShapeEntity.ShapeArgs.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          d_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_descriptor;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs getDefaultInstanceForType() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance();
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs build() {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs buildPartial() {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs(this);
          result.d_ = d_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) {
            return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs other) {
          if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance()) return this;
          if (!other.getD().isEmpty()) {
            d_ = other.d_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object d_ = "";
        /**
         * <pre>
         * SVG 路径
         * </pre>
         *
         * <code>string d = 1;</code>
         * @return The d.
         */
        public java.lang.String getD() {
          java.lang.Object ref = d_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            d_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * SVG 路径
         * </pre>
         *
         * <code>string d = 1;</code>
         * @return The bytes for d.
         */
        public com.google.protobuf.ByteString
            getDBytes() {
          java.lang.Object ref = d_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            d_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * SVG 路径
         * </pre>
         *
         * <code>string d = 1;</code>
         * @param value The d to set.
         * @return This builder for chaining.
         */
        public Builder setD(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          d_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * SVG 路径
         * </pre>
         *
         * <code>string d = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearD() {
          
          d_ = getDefaultInstance().getD();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * SVG 路径
         * </pre>
         *
         * <code>string d = 1;</code>
         * @param value The bytes for d to set.
         * @return This builder for chaining.
         */
        public Builder setDBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          d_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.opensource.svga.ShapeEntity.ShapeArgs)
      }

      // @@protoc_insertion_point(class_scope:com.opensource.svga.ShapeEntity.ShapeArgs)
      private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs();
      }

      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ShapeArgs>
          PARSER = new com.google.protobuf.AbstractParser<ShapeArgs>() {
        @java.lang.Override
        public ShapeArgs parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ShapeArgs(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ShapeArgs> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ShapeArgs> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RectArgsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.opensource.svga.ShapeEntity.RectArgs)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      float getX();

      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      float getY();

      /**
       * <code>float width = 3;</code>
       * @return The width.
       */
      float getWidth();

      /**
       * <code>float height = 4;</code>
       * @return The height.
       */
      float getHeight();

      /**
       * <pre>
       * 圆角半径
       * </pre>
       *
       * <code>float cornerRadius = 5;</code>
       * @return The cornerRadius.
       */
      float getCornerRadius();
    }
    /**
     * Protobuf type {@code com.opensource.svga.ShapeEntity.RectArgs}
     */
    public static final class RectArgs extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.opensource.svga.ShapeEntity.RectArgs)
        RectArgsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RectArgs.newBuilder() to construct.
      private RectArgs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RectArgs() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RectArgs();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RectArgs(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {

                x_ = input.readFloat();
                break;
              }
              case 21: {

                y_ = input.readFloat();
                break;
              }
              case 29: {

                width_ = input.readFloat();
                break;
              }
              case 37: {

                height_ = input.readFloat();
                break;
              }
              case 45: {

                cornerRadius_ = input.readFloat();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_RectArgs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_RectArgs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.Builder.class);
      }

      public static final int X_FIELD_NUMBER = 1;
      private float x_;
      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 2;
      private float y_;
      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }

      public static final int WIDTH_FIELD_NUMBER = 3;
      private float width_;
      /**
       * <code>float width = 3;</code>
       * @return The width.
       */
      @java.lang.Override
      public float getWidth() {
        return width_;
      }

      public static final int HEIGHT_FIELD_NUMBER = 4;
      private float height_;
      /**
       * <code>float height = 4;</code>
       * @return The height.
       */
      @java.lang.Override
      public float getHeight() {
        return height_;
      }

      public static final int CORNERRADIUS_FIELD_NUMBER = 5;
      private float cornerRadius_;
      /**
       * <pre>
       * 圆角半径
       * </pre>
       *
       * <code>float cornerRadius = 5;</code>
       * @return The cornerRadius.
       */
      @java.lang.Override
      public float getCornerRadius() {
        return cornerRadius_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (x_ != 0F) {
          output.writeFloat(1, x_);
        }
        if (y_ != 0F) {
          output.writeFloat(2, y_);
        }
        if (width_ != 0F) {
          output.writeFloat(3, width_);
        }
        if (height_ != 0F) {
          output.writeFloat(4, height_);
        }
        if (cornerRadius_ != 0F) {
          output.writeFloat(5, cornerRadius_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (x_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, x_);
        }
        if (y_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, y_);
        }
        if (width_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, width_);
        }
        if (height_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, height_);
        }
        if (cornerRadius_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, cornerRadius_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs)) {
          return super.equals(obj);
        }
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) obj;

        if (java.lang.Float.floatToIntBits(getX())
            != java.lang.Float.floatToIntBits(
                other.getX())) return false;
        if (java.lang.Float.floatToIntBits(getY())
            != java.lang.Float.floatToIntBits(
                other.getY())) return false;
        if (java.lang.Float.floatToIntBits(getWidth())
            != java.lang.Float.floatToIntBits(
                other.getWidth())) return false;
        if (java.lang.Float.floatToIntBits(getHeight())
            != java.lang.Float.floatToIntBits(
                other.getHeight())) return false;
        if (java.lang.Float.floatToIntBits(getCornerRadius())
            != java.lang.Float.floatToIntBits(
                other.getCornerRadius())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getWidth());
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getHeight());
        hash = (37 * hash) + CORNERRADIUS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getCornerRadius());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.opensource.svga.ShapeEntity.RectArgs}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.opensource.svga.ShapeEntity.RectArgs)
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_RectArgs_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_RectArgs_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.Builder.class);
        }

        // Construct using com.svga.plugin.svga_plugin.proto.Svga.ShapeEntity.RectArgs.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          x_ = 0F;

          y_ = 0F;

          width_ = 0F;

          height_ = 0F;

          cornerRadius_ = 0F;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_RectArgs_descriptor;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs getDefaultInstanceForType() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance();
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs build() {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs buildPartial() {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs(this);
          result.x_ = x_;
          result.y_ = y_;
          result.width_ = width_;
          result.height_ = height_;
          result.cornerRadius_ = cornerRadius_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) {
            return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs other) {
          if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance()) return this;
          if (other.getX() != 0F) {
            setX(other.getX());
          }
          if (other.getY() != 0F) {
            setY(other.getY());
          }
          if (other.getWidth() != 0F) {
            setWidth(other.getWidth());
          }
          if (other.getHeight() != 0F) {
            setHeight(other.getHeight());
          }
          if (other.getCornerRadius() != 0F) {
            setCornerRadius(other.getCornerRadius());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private float x_ ;
        /**
         * <code>float x = 1;</code>
         * @return The x.
         */
        @java.lang.Override
        public float getX() {
          return x_;
        }
        /**
         * <code>float x = 1;</code>
         * @param value The x to set.
         * @return This builder for chaining.
         */
        public Builder setX(float value) {
          
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float x = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearX() {
          
          x_ = 0F;
          onChanged();
          return this;
        }

        private float y_ ;
        /**
         * <code>float y = 2;</code>
         * @return The y.
         */
        @java.lang.Override
        public float getY() {
          return y_;
        }
        /**
         * <code>float y = 2;</code>
         * @param value The y to set.
         * @return This builder for chaining.
         */
        public Builder setY(float value) {
          
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float y = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearY() {
          
          y_ = 0F;
          onChanged();
          return this;
        }

        private float width_ ;
        /**
         * <code>float width = 3;</code>
         * @return The width.
         */
        @java.lang.Override
        public float getWidth() {
          return width_;
        }
        /**
         * <code>float width = 3;</code>
         * @param value The width to set.
         * @return This builder for chaining.
         */
        public Builder setWidth(float value) {
          
          width_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float width = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearWidth() {
          
          width_ = 0F;
          onChanged();
          return this;
        }

        private float height_ ;
        /**
         * <code>float height = 4;</code>
         * @return The height.
         */
        @java.lang.Override
        public float getHeight() {
          return height_;
        }
        /**
         * <code>float height = 4;</code>
         * @param value The height to set.
         * @return This builder for chaining.
         */
        public Builder setHeight(float value) {
          
          height_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float height = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearHeight() {
          
          height_ = 0F;
          onChanged();
          return this;
        }

        private float cornerRadius_ ;
        /**
         * <pre>
         * 圆角半径
         * </pre>
         *
         * <code>float cornerRadius = 5;</code>
         * @return The cornerRadius.
         */
        @java.lang.Override
        public float getCornerRadius() {
          return cornerRadius_;
        }
        /**
         * <pre>
         * 圆角半径
         * </pre>
         *
         * <code>float cornerRadius = 5;</code>
         * @param value The cornerRadius to set.
         * @return This builder for chaining.
         */
        public Builder setCornerRadius(float value) {
          
          cornerRadius_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 圆角半径
         * </pre>
         *
         * <code>float cornerRadius = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearCornerRadius() {
          
          cornerRadius_ = 0F;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.opensource.svga.ShapeEntity.RectArgs)
      }

      // @@protoc_insertion_point(class_scope:com.opensource.svga.ShapeEntity.RectArgs)
      private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs();
      }

      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RectArgs>
          PARSER = new com.google.protobuf.AbstractParser<RectArgs>() {
        @java.lang.Override
        public RectArgs parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RectArgs(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RectArgs> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RectArgs> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface EllipseArgsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.opensource.svga.ShapeEntity.EllipseArgs)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * 圆中心点 X
       * </pre>
       *
       * <code>float x = 1;</code>
       * @return The x.
       */
      float getX();

      /**
       * <pre>
       * 圆中心点 Y
       * </pre>
       *
       * <code>float y = 2;</code>
       * @return The y.
       */
      float getY();

      /**
       * <pre>
       * 横向半径
       * </pre>
       *
       * <code>float radiusX = 3;</code>
       * @return The radiusX.
       */
      float getRadiusX();

      /**
       * <pre>
       * 纵向半径
       * </pre>
       *
       * <code>float radiusY = 4;</code>
       * @return The radiusY.
       */
      float getRadiusY();
    }
    /**
     * Protobuf type {@code com.opensource.svga.ShapeEntity.EllipseArgs}
     */
    public static final class EllipseArgs extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.opensource.svga.ShapeEntity.EllipseArgs)
        EllipseArgsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use EllipseArgs.newBuilder() to construct.
      private EllipseArgs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private EllipseArgs() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new EllipseArgs();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private EllipseArgs(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {

                x_ = input.readFloat();
                break;
              }
              case 21: {

                y_ = input.readFloat();
                break;
              }
              case 29: {

                radiusX_ = input.readFloat();
                break;
              }
              case 37: {

                radiusY_ = input.readFloat();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.Builder.class);
      }

      public static final int X_FIELD_NUMBER = 1;
      private float x_;
      /**
       * <pre>
       * 圆中心点 X
       * </pre>
       *
       * <code>float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 2;
      private float y_;
      /**
       * <pre>
       * 圆中心点 Y
       * </pre>
       *
       * <code>float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }

      public static final int RADIUSX_FIELD_NUMBER = 3;
      private float radiusX_;
      /**
       * <pre>
       * 横向半径
       * </pre>
       *
       * <code>float radiusX = 3;</code>
       * @return The radiusX.
       */
      @java.lang.Override
      public float getRadiusX() {
        return radiusX_;
      }

      public static final int RADIUSY_FIELD_NUMBER = 4;
      private float radiusY_;
      /**
       * <pre>
       * 纵向半径
       * </pre>
       *
       * <code>float radiusY = 4;</code>
       * @return The radiusY.
       */
      @java.lang.Override
      public float getRadiusY() {
        return radiusY_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (x_ != 0F) {
          output.writeFloat(1, x_);
        }
        if (y_ != 0F) {
          output.writeFloat(2, y_);
        }
        if (radiusX_ != 0F) {
          output.writeFloat(3, radiusX_);
        }
        if (radiusY_ != 0F) {
          output.writeFloat(4, radiusY_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (x_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, x_);
        }
        if (y_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, y_);
        }
        if (radiusX_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, radiusX_);
        }
        if (radiusY_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, radiusY_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs)) {
          return super.equals(obj);
        }
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) obj;

        if (java.lang.Float.floatToIntBits(getX())
            != java.lang.Float.floatToIntBits(
                other.getX())) return false;
        if (java.lang.Float.floatToIntBits(getY())
            != java.lang.Float.floatToIntBits(
                other.getY())) return false;
        if (java.lang.Float.floatToIntBits(getRadiusX())
            != java.lang.Float.floatToIntBits(
                other.getRadiusX())) return false;
        if (java.lang.Float.floatToIntBits(getRadiusY())
            != java.lang.Float.floatToIntBits(
                other.getRadiusY())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
        hash = (37 * hash) + RADIUSX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRadiusX());
        hash = (37 * hash) + RADIUSY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRadiusY());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.opensource.svga.ShapeEntity.EllipseArgs}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.opensource.svga.ShapeEntity.EllipseArgs)
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.Builder.class);
        }

        // Construct using com.svga.plugin.svga_plugin.proto.Svga.ShapeEntity.EllipseArgs.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          x_ = 0F;

          y_ = 0F;

          radiusX_ = 0F;

          radiusY_ = 0F;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_descriptor;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs getDefaultInstanceForType() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance();
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs build() {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs buildPartial() {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs(this);
          result.x_ = x_;
          result.y_ = y_;
          result.radiusX_ = radiusX_;
          result.radiusY_ = radiusY_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) {
            return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs other) {
          if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance()) return this;
          if (other.getX() != 0F) {
            setX(other.getX());
          }
          if (other.getY() != 0F) {
            setY(other.getY());
          }
          if (other.getRadiusX() != 0F) {
            setRadiusX(other.getRadiusX());
          }
          if (other.getRadiusY() != 0F) {
            setRadiusY(other.getRadiusY());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private float x_ ;
        /**
         * <pre>
         * 圆中心点 X
         * </pre>
         *
         * <code>float x = 1;</code>
         * @return The x.
         */
        @java.lang.Override
        public float getX() {
          return x_;
        }
        /**
         * <pre>
         * 圆中心点 X
         * </pre>
         *
         * <code>float x = 1;</code>
         * @param value The x to set.
         * @return This builder for chaining.
         */
        public Builder setX(float value) {
          
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 圆中心点 X
         * </pre>
         *
         * <code>float x = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearX() {
          
          x_ = 0F;
          onChanged();
          return this;
        }

        private float y_ ;
        /**
         * <pre>
         * 圆中心点 Y
         * </pre>
         *
         * <code>float y = 2;</code>
         * @return The y.
         */
        @java.lang.Override
        public float getY() {
          return y_;
        }
        /**
         * <pre>
         * 圆中心点 Y
         * </pre>
         *
         * <code>float y = 2;</code>
         * @param value The y to set.
         * @return This builder for chaining.
         */
        public Builder setY(float value) {
          
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 圆中心点 Y
         * </pre>
         *
         * <code>float y = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearY() {
          
          y_ = 0F;
          onChanged();
          return this;
        }

        private float radiusX_ ;
        /**
         * <pre>
         * 横向半径
         * </pre>
         *
         * <code>float radiusX = 3;</code>
         * @return The radiusX.
         */
        @java.lang.Override
        public float getRadiusX() {
          return radiusX_;
        }
        /**
         * <pre>
         * 横向半径
         * </pre>
         *
         * <code>float radiusX = 3;</code>
         * @param value The radiusX to set.
         * @return This builder for chaining.
         */
        public Builder setRadiusX(float value) {
          
          radiusX_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 横向半径
         * </pre>
         *
         * <code>float radiusX = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearRadiusX() {
          
          radiusX_ = 0F;
          onChanged();
          return this;
        }

        private float radiusY_ ;
        /**
         * <pre>
         * 纵向半径
         * </pre>
         *
         * <code>float radiusY = 4;</code>
         * @return The radiusY.
         */
        @java.lang.Override
        public float getRadiusY() {
          return radiusY_;
        }
        /**
         * <pre>
         * 纵向半径
         * </pre>
         *
         * <code>float radiusY = 4;</code>
         * @param value The radiusY to set.
         * @return This builder for chaining.
         */
        public Builder setRadiusY(float value) {
          
          radiusY_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 纵向半径
         * </pre>
         *
         * <code>float radiusY = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearRadiusY() {
          
          radiusY_ = 0F;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.opensource.svga.ShapeEntity.EllipseArgs)
      }

      // @@protoc_insertion_point(class_scope:com.opensource.svga.ShapeEntity.EllipseArgs)
      private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs();
      }

      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<EllipseArgs>
          PARSER = new com.google.protobuf.AbstractParser<EllipseArgs>() {
        @java.lang.Override
        public EllipseArgs parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new EllipseArgs(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<EllipseArgs> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<EllipseArgs> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ShapeStyleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.opensource.svga.ShapeEntity.ShapeStyle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * 填充色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
       * @return Whether the fill field is set.
       */
      boolean hasFill();
      /**
       * <pre>
       * 填充色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
       * @return The fill.
       */
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getFill();
      /**
       * <pre>
       * 填充色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
       */
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder getFillOrBuilder();

      /**
       * <pre>
       * 描边色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
       * @return Whether the stroke field is set.
       */
      boolean hasStroke();
      /**
       * <pre>
       * 描边色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
       * @return The stroke.
       */
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getStroke();
      /**
       * <pre>
       * 描边色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
       */
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder getStrokeOrBuilder();

      /**
       * <pre>
       * 描边宽
       * </pre>
       *
       * <code>float strokeWidth = 3;</code>
       * @return The strokeWidth.
       */
      float getStrokeWidth();

      /**
       * <pre>
       * 线段端点样式
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
       * @return The enum numeric value on the wire for lineCap.
       */
      int getLineCapValue();
      /**
       * <pre>
       * 线段端点样式
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
       * @return The lineCap.
       */
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap getLineCap();

      /**
       * <pre>
       * 线段连接样式
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
       * @return The enum numeric value on the wire for lineJoin.
       */
      int getLineJoinValue();
      /**
       * <pre>
       * 线段连接样式
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
       * @return The lineJoin.
       */
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin getLineJoin();

      /**
       * <pre>
       * 尖角限制
       * </pre>
       *
       * <code>float miterLimit = 6;</code>
       * @return The miterLimit.
       */
      float getMiterLimit();

      /**
       * <pre>
       * 虚线参数 Dash
       * </pre>
       *
       * <code>float lineDashI = 7;</code>
       * @return The lineDashI.
       */
      float getLineDashI();

      /**
       * <pre>
       * 虚线参数 Gap
       * </pre>
       *
       * <code>float lineDashII = 8;</code>
       * @return The lineDashII.
       */
      float getLineDashII();

      /**
       * <pre>
       * 虚线参数 Offset
       * </pre>
       *
       * <code>float lineDashIII = 9;</code>
       * @return The lineDashIII.
       */
      float getLineDashIII();
    }
    /**
     * Protobuf type {@code com.opensource.svga.ShapeEntity.ShapeStyle}
     */
    public static final class ShapeStyle extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.opensource.svga.ShapeEntity.ShapeStyle)
        ShapeStyleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ShapeStyle.newBuilder() to construct.
      private ShapeStyle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ShapeStyle() {
        lineCap_ = 0;
        lineJoin_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ShapeStyle();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ShapeStyle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder subBuilder = null;
                if (fill_ != null) {
                  subBuilder = fill_.toBuilder();
                }
                fill_ = input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fill_);
                  fill_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder subBuilder = null;
                if (stroke_ != null) {
                  subBuilder = stroke_.toBuilder();
                }
                stroke_ = input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(stroke_);
                  stroke_ = subBuilder.buildPartial();
                }

                break;
              }
              case 29: {

                strokeWidth_ = input.readFloat();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();

                lineCap_ = rawValue;
                break;
              }
              case 40: {
                int rawValue = input.readEnum();

                lineJoin_ = rawValue;
                break;
              }
              case 53: {

                miterLimit_ = input.readFloat();
                break;
              }
              case 61: {

                lineDashI_ = input.readFloat();
                break;
              }
              case 69: {

                lineDashII_ = input.readFloat();
                break;
              }
              case 77: {

                lineDashIII_ = input.readFloat();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.Builder.class);
      }

      /**
       * Protobuf enum {@code com.opensource.svga.ShapeEntity.ShapeStyle.LineCap}
       */
      public enum LineCap
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>LineCap_BUTT = 0;</code>
         */
        LineCap_BUTT(0),
        /**
         * <code>LineCap_ROUND = 1;</code>
         */
        LineCap_ROUND(1),
        /**
         * <code>LineCap_SQUARE = 2;</code>
         */
        LineCap_SQUARE(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>LineCap_BUTT = 0;</code>
         */
        public static final int LineCap_BUTT_VALUE = 0;
        /**
         * <code>LineCap_ROUND = 1;</code>
         */
        public static final int LineCap_ROUND_VALUE = 1;
        /**
         * <code>LineCap_SQUARE = 2;</code>
         */
        public static final int LineCap_SQUARE_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static LineCap valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static LineCap forNumber(int value) {
          switch (value) {
            case 0: return LineCap_BUTT;
            case 1: return LineCap_ROUND;
            case 2: return LineCap_SQUARE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<LineCap>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            LineCap> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<LineCap>() {
                public LineCap findValueByNumber(int number) {
                  return LineCap.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.getDescriptor().getEnumTypes().get(0);
        }

        private static final LineCap[] VALUES = values();

        public static LineCap valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private LineCap(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.opensource.svga.ShapeEntity.ShapeStyle.LineCap)
      }

      /**
       * Protobuf enum {@code com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin}
       */
      public enum LineJoin
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>LineJoin_MITER = 0;</code>
         */
        LineJoin_MITER(0),
        /**
         * <code>LineJoin_ROUND = 1;</code>
         */
        LineJoin_ROUND(1),
        /**
         * <code>LineJoin_BEVEL = 2;</code>
         */
        LineJoin_BEVEL(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>LineJoin_MITER = 0;</code>
         */
        public static final int LineJoin_MITER_VALUE = 0;
        /**
         * <code>LineJoin_ROUND = 1;</code>
         */
        public static final int LineJoin_ROUND_VALUE = 1;
        /**
         * <code>LineJoin_BEVEL = 2;</code>
         */
        public static final int LineJoin_BEVEL_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static LineJoin valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static LineJoin forNumber(int value) {
          switch (value) {
            case 0: return LineJoin_MITER;
            case 1: return LineJoin_ROUND;
            case 2: return LineJoin_BEVEL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<LineJoin>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            LineJoin> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<LineJoin>() {
                public LineJoin findValueByNumber(int number) {
                  return LineJoin.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.getDescriptor().getEnumTypes().get(1);
        }

        private static final LineJoin[] VALUES = values();

        public static LineJoin valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private LineJoin(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin)
      }

      public interface RGBAColorOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>float r = 1;</code>
         * @return The r.
         */
        float getR();

        /**
         * <code>float g = 2;</code>
         * @return The g.
         */
        float getG();

        /**
         * <code>float b = 3;</code>
         * @return The b.
         */
        float getB();

        /**
         * <code>float a = 4;</code>
         * @return The a.
         */
        float getA();
      }
      /**
       * Protobuf type {@code com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor}
       */
      public static final class RGBAColor extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor)
          RGBAColorOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use RGBAColor.newBuilder() to construct.
        private RGBAColor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private RGBAColor() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new RGBAColor();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private RGBAColor(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {

                  r_ = input.readFloat();
                  break;
                }
                case 21: {

                  g_ = input.readFloat();
                  break;
                }
                case 29: {

                  b_ = input.readFloat();
                  break;
                }
                case 37: {

                  a_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder.class);
        }

        public static final int R_FIELD_NUMBER = 1;
        private float r_;
        /**
         * <code>float r = 1;</code>
         * @return The r.
         */
        @java.lang.Override
        public float getR() {
          return r_;
        }

        public static final int G_FIELD_NUMBER = 2;
        private float g_;
        /**
         * <code>float g = 2;</code>
         * @return The g.
         */
        @java.lang.Override
        public float getG() {
          return g_;
        }

        public static final int B_FIELD_NUMBER = 3;
        private float b_;
        /**
         * <code>float b = 3;</code>
         * @return The b.
         */
        @java.lang.Override
        public float getB() {
          return b_;
        }

        public static final int A_FIELD_NUMBER = 4;
        private float a_;
        /**
         * <code>float a = 4;</code>
         * @return The a.
         */
        @java.lang.Override
        public float getA() {
          return a_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (r_ != 0F) {
            output.writeFloat(1, r_);
          }
          if (g_ != 0F) {
            output.writeFloat(2, g_);
          }
          if (b_ != 0F) {
            output.writeFloat(3, b_);
          }
          if (a_ != 0F) {
            output.writeFloat(4, a_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (r_ != 0F) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, r_);
          }
          if (g_ != 0F) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, g_);
          }
          if (b_ != 0F) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, b_);
          }
          if (a_ != 0F) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, a_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor)) {
            return super.equals(obj);
          }
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor) obj;

          if (java.lang.Float.floatToIntBits(getR())
              != java.lang.Float.floatToIntBits(
                  other.getR())) return false;
          if (java.lang.Float.floatToIntBits(getG())
              != java.lang.Float.floatToIntBits(
                  other.getG())) return false;
          if (java.lang.Float.floatToIntBits(getB())
              != java.lang.Float.floatToIntBits(
                  other.getB())) return false;
          if (java.lang.Float.floatToIntBits(getA())
              != java.lang.Float.floatToIntBits(
                  other.getA())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + R_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getR());
          hash = (37 * hash) + G_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getG());
          hash = (37 * hash) + B_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getB());
          hash = (37 * hash) + A_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getA());
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor)
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder.class);
          }

          // Construct using com.svga.plugin.svga_plugin.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            r_ = 0F;

            g_ = 0F;

            b_ = 0F;

            a_ = 0F;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_descriptor;
          }

          @java.lang.Override
          public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getDefaultInstanceForType() {
            return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.getDefaultInstance();
          }

          @java.lang.Override
          public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor build() {
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor buildPartial() {
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor(this);
            result.r_ = r_;
            result.g_ = g_;
            result.b_ = b_;
            result.a_ = a_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor) {
              return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor other) {
            if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.getDefaultInstance()) return this;
            if (other.getR() != 0F) {
              setR(other.getR());
            }
            if (other.getG() != 0F) {
              setG(other.getG());
            }
            if (other.getB() != 0F) {
              setB(other.getB());
            }
            if (other.getA() != 0F) {
              setA(other.getA());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private float r_ ;
          /**
           * <code>float r = 1;</code>
           * @return The r.
           */
          @java.lang.Override
          public float getR() {
            return r_;
          }
          /**
           * <code>float r = 1;</code>
           * @param value The r to set.
           * @return This builder for chaining.
           */
          public Builder setR(float value) {
            
            r_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>float r = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearR() {
            
            r_ = 0F;
            onChanged();
            return this;
          }

          private float g_ ;
          /**
           * <code>float g = 2;</code>
           * @return The g.
           */
          @java.lang.Override
          public float getG() {
            return g_;
          }
          /**
           * <code>float g = 2;</code>
           * @param value The g to set.
           * @return This builder for chaining.
           */
          public Builder setG(float value) {
            
            g_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>float g = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearG() {
            
            g_ = 0F;
            onChanged();
            return this;
          }

          private float b_ ;
          /**
           * <code>float b = 3;</code>
           * @return The b.
           */
          @java.lang.Override
          public float getB() {
            return b_;
          }
          /**
           * <code>float b = 3;</code>
           * @param value The b to set.
           * @return This builder for chaining.
           */
          public Builder setB(float value) {
            
            b_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>float b = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearB() {
            
            b_ = 0F;
            onChanged();
            return this;
          }

          private float a_ ;
          /**
           * <code>float a = 4;</code>
           * @return The a.
           */
          @java.lang.Override
          public float getA() {
            return a_;
          }
          /**
           * <code>float a = 4;</code>
           * @param value The a to set.
           * @return This builder for chaining.
           */
          public Builder setA(float value) {
            
            a_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>float a = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearA() {
            
            a_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor)
        }

        // @@protoc_insertion_point(class_scope:com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor)
        private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor();
        }

        public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<RGBAColor>
            PARSER = new com.google.protobuf.AbstractParser<RGBAColor>() {
          @java.lang.Override
          public RGBAColor parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new RGBAColor(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<RGBAColor> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<RGBAColor> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int FILL_FIELD_NUMBER = 1;
      private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor fill_;
      /**
       * <pre>
       * 填充色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
       * @return Whether the fill field is set.
       */
      @java.lang.Override
      public boolean hasFill() {
        return fill_ != null;
      }
      /**
       * <pre>
       * 填充色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
       * @return The fill.
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getFill() {
        return fill_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.getDefaultInstance() : fill_;
      }
      /**
       * <pre>
       * 填充色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder getFillOrBuilder() {
        return getFill();
      }

      public static final int STROKE_FIELD_NUMBER = 2;
      private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor stroke_;
      /**
       * <pre>
       * 描边色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
       * @return Whether the stroke field is set.
       */
      @java.lang.Override
      public boolean hasStroke() {
        return stroke_ != null;
      }
      /**
       * <pre>
       * 描边色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
       * @return The stroke.
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getStroke() {
        return stroke_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.getDefaultInstance() : stroke_;
      }
      /**
       * <pre>
       * 描边色
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder getStrokeOrBuilder() {
        return getStroke();
      }

      public static final int STROKEWIDTH_FIELD_NUMBER = 3;
      private float strokeWidth_;
      /**
       * <pre>
       * 描边宽
       * </pre>
       *
       * <code>float strokeWidth = 3;</code>
       * @return The strokeWidth.
       */
      @java.lang.Override
      public float getStrokeWidth() {
        return strokeWidth_;
      }

      public static final int LINECAP_FIELD_NUMBER = 4;
      private int lineCap_;
      /**
       * <pre>
       * 线段端点样式
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
       * @return The enum numeric value on the wire for lineCap.
       */
      @java.lang.Override public int getLineCapValue() {
        return lineCap_;
      }
      /**
       * <pre>
       * 线段端点样式
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
       * @return The lineCap.
       */
      @java.lang.Override public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap getLineCap() {
        @SuppressWarnings("deprecation")
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap result = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap.valueOf(lineCap_);
        return result == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap.UNRECOGNIZED : result;
      }

      public static final int LINEJOIN_FIELD_NUMBER = 5;
      private int lineJoin_;
      /**
       * <pre>
       * 线段连接样式
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
       * @return The enum numeric value on the wire for lineJoin.
       */
      @java.lang.Override public int getLineJoinValue() {
        return lineJoin_;
      }
      /**
       * <pre>
       * 线段连接样式
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
       * @return The lineJoin.
       */
      @java.lang.Override public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin getLineJoin() {
        @SuppressWarnings("deprecation")
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin result = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin.valueOf(lineJoin_);
        return result == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin.UNRECOGNIZED : result;
      }

      public static final int MITERLIMIT_FIELD_NUMBER = 6;
      private float miterLimit_;
      /**
       * <pre>
       * 尖角限制
       * </pre>
       *
       * <code>float miterLimit = 6;</code>
       * @return The miterLimit.
       */
      @java.lang.Override
      public float getMiterLimit() {
        return miterLimit_;
      }

      public static final int LINEDASHI_FIELD_NUMBER = 7;
      private float lineDashI_;
      /**
       * <pre>
       * 虚线参数 Dash
       * </pre>
       *
       * <code>float lineDashI = 7;</code>
       * @return The lineDashI.
       */
      @java.lang.Override
      public float getLineDashI() {
        return lineDashI_;
      }

      public static final int LINEDASHII_FIELD_NUMBER = 8;
      private float lineDashII_;
      /**
       * <pre>
       * 虚线参数 Gap
       * </pre>
       *
       * <code>float lineDashII = 8;</code>
       * @return The lineDashII.
       */
      @java.lang.Override
      public float getLineDashII() {
        return lineDashII_;
      }

      public static final int LINEDASHIII_FIELD_NUMBER = 9;
      private float lineDashIII_;
      /**
       * <pre>
       * 虚线参数 Offset
       * </pre>
       *
       * <code>float lineDashIII = 9;</code>
       * @return The lineDashIII.
       */
      @java.lang.Override
      public float getLineDashIII() {
        return lineDashIII_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (fill_ != null) {
          output.writeMessage(1, getFill());
        }
        if (stroke_ != null) {
          output.writeMessage(2, getStroke());
        }
        if (strokeWidth_ != 0F) {
          output.writeFloat(3, strokeWidth_);
        }
        if (lineCap_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap.LineCap_BUTT.getNumber()) {
          output.writeEnum(4, lineCap_);
        }
        if (lineJoin_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin.LineJoin_MITER.getNumber()) {
          output.writeEnum(5, lineJoin_);
        }
        if (miterLimit_ != 0F) {
          output.writeFloat(6, miterLimit_);
        }
        if (lineDashI_ != 0F) {
          output.writeFloat(7, lineDashI_);
        }
        if (lineDashII_ != 0F) {
          output.writeFloat(8, lineDashII_);
        }
        if (lineDashIII_ != 0F) {
          output.writeFloat(9, lineDashIII_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (fill_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getFill());
        }
        if (stroke_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getStroke());
        }
        if (strokeWidth_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, strokeWidth_);
        }
        if (lineCap_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap.LineCap_BUTT.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, lineCap_);
        }
        if (lineJoin_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin.LineJoin_MITER.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, lineJoin_);
        }
        if (miterLimit_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, miterLimit_);
        }
        if (lineDashI_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, lineDashI_);
        }
        if (lineDashII_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, lineDashII_);
        }
        if (lineDashIII_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(9, lineDashIII_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle)) {
          return super.equals(obj);
        }
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle) obj;

        if (hasFill() != other.hasFill()) return false;
        if (hasFill()) {
          if (!getFill()
              .equals(other.getFill())) return false;
        }
        if (hasStroke() != other.hasStroke()) return false;
        if (hasStroke()) {
          if (!getStroke()
              .equals(other.getStroke())) return false;
        }
        if (java.lang.Float.floatToIntBits(getStrokeWidth())
            != java.lang.Float.floatToIntBits(
                other.getStrokeWidth())) return false;
        if (lineCap_ != other.lineCap_) return false;
        if (lineJoin_ != other.lineJoin_) return false;
        if (java.lang.Float.floatToIntBits(getMiterLimit())
            != java.lang.Float.floatToIntBits(
                other.getMiterLimit())) return false;
        if (java.lang.Float.floatToIntBits(getLineDashI())
            != java.lang.Float.floatToIntBits(
                other.getLineDashI())) return false;
        if (java.lang.Float.floatToIntBits(getLineDashII())
            != java.lang.Float.floatToIntBits(
                other.getLineDashII())) return false;
        if (java.lang.Float.floatToIntBits(getLineDashIII())
            != java.lang.Float.floatToIntBits(
                other.getLineDashIII())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasFill()) {
          hash = (37 * hash) + FILL_FIELD_NUMBER;
          hash = (53 * hash) + getFill().hashCode();
        }
        if (hasStroke()) {
          hash = (37 * hash) + STROKE_FIELD_NUMBER;
          hash = (53 * hash) + getStroke().hashCode();
        }
        hash = (37 * hash) + STROKEWIDTH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getStrokeWidth());
        hash = (37 * hash) + LINECAP_FIELD_NUMBER;
        hash = (53 * hash) + lineCap_;
        hash = (37 * hash) + LINEJOIN_FIELD_NUMBER;
        hash = (53 * hash) + lineJoin_;
        hash = (37 * hash) + MITERLIMIT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMiterLimit());
        hash = (37 * hash) + LINEDASHI_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLineDashI());
        hash = (37 * hash) + LINEDASHII_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLineDashII());
        hash = (37 * hash) + LINEDASHIII_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLineDashIII());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.opensource.svga.ShapeEntity.ShapeStyle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.opensource.svga.ShapeEntity.ShapeStyle)
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.Builder.class);
        }

        // Construct using com.svga.plugin.svga_plugin.proto.Svga.ShapeEntity.ShapeStyle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (fillBuilder_ == null) {
            fill_ = null;
          } else {
            fill_ = null;
            fillBuilder_ = null;
          }
          if (strokeBuilder_ == null) {
            stroke_ = null;
          } else {
            stroke_ = null;
            strokeBuilder_ = null;
          }
          strokeWidth_ = 0F;

          lineCap_ = 0;

          lineJoin_ = 0;

          miterLimit_ = 0F;

          lineDashI_ = 0F;

          lineDashII_ = 0F;

          lineDashIII_ = 0F;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_descriptor;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle getDefaultInstanceForType() {
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.getDefaultInstance();
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle build() {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle buildPartial() {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle(this);
          if (fillBuilder_ == null) {
            result.fill_ = fill_;
          } else {
            result.fill_ = fillBuilder_.build();
          }
          if (strokeBuilder_ == null) {
            result.stroke_ = stroke_;
          } else {
            result.stroke_ = strokeBuilder_.build();
          }
          result.strokeWidth_ = strokeWidth_;
          result.lineCap_ = lineCap_;
          result.lineJoin_ = lineJoin_;
          result.miterLimit_ = miterLimit_;
          result.lineDashI_ = lineDashI_;
          result.lineDashII_ = lineDashII_;
          result.lineDashIII_ = lineDashIII_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle) {
            return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle other) {
          if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.getDefaultInstance()) return this;
          if (other.hasFill()) {
            mergeFill(other.getFill());
          }
          if (other.hasStroke()) {
            mergeStroke(other.getStroke());
          }
          if (other.getStrokeWidth() != 0F) {
            setStrokeWidth(other.getStrokeWidth());
          }
          if (other.lineCap_ != 0) {
            setLineCapValue(other.getLineCapValue());
          }
          if (other.lineJoin_ != 0) {
            setLineJoinValue(other.getLineJoinValue());
          }
          if (other.getMiterLimit() != 0F) {
            setMiterLimit(other.getMiterLimit());
          }
          if (other.getLineDashI() != 0F) {
            setLineDashI(other.getLineDashI());
          }
          if (other.getLineDashII() != 0F) {
            setLineDashII(other.getLineDashII());
          }
          if (other.getLineDashIII() != 0F) {
            setLineDashIII(other.getLineDashIII());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor fill_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder> fillBuilder_;
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         * @return Whether the fill field is set.
         */
        public boolean hasFill() {
          return fillBuilder_ != null || fill_ != null;
        }
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         * @return The fill.
         */
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getFill() {
          if (fillBuilder_ == null) {
            return fill_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.getDefaultInstance() : fill_;
          } else {
            return fillBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         */
        public Builder setFill(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor value) {
          if (fillBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fill_ = value;
            onChanged();
          } else {
            fillBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         */
        public Builder setFill(
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder builderForValue) {
          if (fillBuilder_ == null) {
            fill_ = builderForValue.build();
            onChanged();
          } else {
            fillBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         */
        public Builder mergeFill(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor value) {
          if (fillBuilder_ == null) {
            if (fill_ != null) {
              fill_ =
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.newBuilder(fill_).mergeFrom(value).buildPartial();
            } else {
              fill_ = value;
            }
            onChanged();
          } else {
            fillBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         */
        public Builder clearFill() {
          if (fillBuilder_ == null) {
            fill_ = null;
            onChanged();
          } else {
            fill_ = null;
            fillBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         */
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder getFillBuilder() {
          
          onChanged();
          return getFillFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         */
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder getFillOrBuilder() {
          if (fillBuilder_ != null) {
            return fillBuilder_.getMessageOrBuilder();
          } else {
            return fill_ == null ?
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.getDefaultInstance() : fill_;
          }
        }
        /**
         * <pre>
         * 填充色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor fill = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder>
            getFillFieldBuilder() {
          if (fillBuilder_ == null) {
            fillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder>(
                    getFill(),
                    getParentForChildren(),
                    isClean());
            fill_ = null;
          }
          return fillBuilder_;
        }

        private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor stroke_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder> strokeBuilder_;
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         * @return Whether the stroke field is set.
         */
        public boolean hasStroke() {
          return strokeBuilder_ != null || stroke_ != null;
        }
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         * @return The stroke.
         */
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor getStroke() {
          if (strokeBuilder_ == null) {
            return stroke_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.getDefaultInstance() : stroke_;
          } else {
            return strokeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         */
        public Builder setStroke(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor value) {
          if (strokeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            stroke_ = value;
            onChanged();
          } else {
            strokeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         */
        public Builder setStroke(
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder builderForValue) {
          if (strokeBuilder_ == null) {
            stroke_ = builderForValue.build();
            onChanged();
          } else {
            strokeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         */
        public Builder mergeStroke(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor value) {
          if (strokeBuilder_ == null) {
            if (stroke_ != null) {
              stroke_ =
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.newBuilder(stroke_).mergeFrom(value).buildPartial();
            } else {
              stroke_ = value;
            }
            onChanged();
          } else {
            strokeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         */
        public Builder clearStroke() {
          if (strokeBuilder_ == null) {
            stroke_ = null;
            onChanged();
          } else {
            stroke_ = null;
            strokeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         */
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder getStrokeBuilder() {
          
          onChanged();
          return getStrokeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         */
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder getStrokeOrBuilder() {
          if (strokeBuilder_ != null) {
            return strokeBuilder_.getMessageOrBuilder();
          } else {
            return stroke_ == null ?
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.getDefaultInstance() : stroke_;
          }
        }
        /**
         * <pre>
         * 描边色
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor stroke = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder>
            getStrokeFieldBuilder() {
          if (strokeBuilder_ == null) {
            strokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColor.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.RGBAColorOrBuilder>(
                    getStroke(),
                    getParentForChildren(),
                    isClean());
            stroke_ = null;
          }
          return strokeBuilder_;
        }

        private float strokeWidth_ ;
        /**
         * <pre>
         * 描边宽
         * </pre>
         *
         * <code>float strokeWidth = 3;</code>
         * @return The strokeWidth.
         */
        @java.lang.Override
        public float getStrokeWidth() {
          return strokeWidth_;
        }
        /**
         * <pre>
         * 描边宽
         * </pre>
         *
         * <code>float strokeWidth = 3;</code>
         * @param value The strokeWidth to set.
         * @return This builder for chaining.
         */
        public Builder setStrokeWidth(float value) {
          
          strokeWidth_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 描边宽
         * </pre>
         *
         * <code>float strokeWidth = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearStrokeWidth() {
          
          strokeWidth_ = 0F;
          onChanged();
          return this;
        }

        private int lineCap_ = 0;
        /**
         * <pre>
         * 线段端点样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
         * @return The enum numeric value on the wire for lineCap.
         */
        @java.lang.Override public int getLineCapValue() {
          return lineCap_;
        }
        /**
         * <pre>
         * 线段端点样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
         * @param value The enum numeric value on the wire for lineCap to set.
         * @return This builder for chaining.
         */
        public Builder setLineCapValue(int value) {
          
          lineCap_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 线段端点样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
         * @return The lineCap.
         */
        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap getLineCap() {
          @SuppressWarnings("deprecation")
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap result = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap.valueOf(lineCap_);
          return result == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * 线段端点样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
         * @param value The lineCap to set.
         * @return This builder for chaining.
         */
        public Builder setLineCap(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineCap value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          lineCap_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 线段端点样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineCap lineCap = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearLineCap() {
          
          lineCap_ = 0;
          onChanged();
          return this;
        }

        private int lineJoin_ = 0;
        /**
         * <pre>
         * 线段连接样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
         * @return The enum numeric value on the wire for lineJoin.
         */
        @java.lang.Override public int getLineJoinValue() {
          return lineJoin_;
        }
        /**
         * <pre>
         * 线段连接样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
         * @param value The enum numeric value on the wire for lineJoin to set.
         * @return This builder for chaining.
         */
        public Builder setLineJoinValue(int value) {
          
          lineJoin_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 线段连接样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
         * @return The lineJoin.
         */
        @java.lang.Override
        public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin getLineJoin() {
          @SuppressWarnings("deprecation")
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin result = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin.valueOf(lineJoin_);
          return result == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * 线段连接样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
         * @param value The lineJoin to set.
         * @return This builder for chaining.
         */
        public Builder setLineJoin(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.LineJoin value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          lineJoin_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 线段连接样式
         * </pre>
         *
         * <code>.com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin lineJoin = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearLineJoin() {
          
          lineJoin_ = 0;
          onChanged();
          return this;
        }

        private float miterLimit_ ;
        /**
         * <pre>
         * 尖角限制
         * </pre>
         *
         * <code>float miterLimit = 6;</code>
         * @return The miterLimit.
         */
        @java.lang.Override
        public float getMiterLimit() {
          return miterLimit_;
        }
        /**
         * <pre>
         * 尖角限制
         * </pre>
         *
         * <code>float miterLimit = 6;</code>
         * @param value The miterLimit to set.
         * @return This builder for chaining.
         */
        public Builder setMiterLimit(float value) {
          
          miterLimit_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 尖角限制
         * </pre>
         *
         * <code>float miterLimit = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearMiterLimit() {
          
          miterLimit_ = 0F;
          onChanged();
          return this;
        }

        private float lineDashI_ ;
        /**
         * <pre>
         * 虚线参数 Dash
         * </pre>
         *
         * <code>float lineDashI = 7;</code>
         * @return The lineDashI.
         */
        @java.lang.Override
        public float getLineDashI() {
          return lineDashI_;
        }
        /**
         * <pre>
         * 虚线参数 Dash
         * </pre>
         *
         * <code>float lineDashI = 7;</code>
         * @param value The lineDashI to set.
         * @return This builder for chaining.
         */
        public Builder setLineDashI(float value) {
          
          lineDashI_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 虚线参数 Dash
         * </pre>
         *
         * <code>float lineDashI = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearLineDashI() {
          
          lineDashI_ = 0F;
          onChanged();
          return this;
        }

        private float lineDashII_ ;
        /**
         * <pre>
         * 虚线参数 Gap
         * </pre>
         *
         * <code>float lineDashII = 8;</code>
         * @return The lineDashII.
         */
        @java.lang.Override
        public float getLineDashII() {
          return lineDashII_;
        }
        /**
         * <pre>
         * 虚线参数 Gap
         * </pre>
         *
         * <code>float lineDashII = 8;</code>
         * @param value The lineDashII to set.
         * @return This builder for chaining.
         */
        public Builder setLineDashII(float value) {
          
          lineDashII_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 虚线参数 Gap
         * </pre>
         *
         * <code>float lineDashII = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearLineDashII() {
          
          lineDashII_ = 0F;
          onChanged();
          return this;
        }

        private float lineDashIII_ ;
        /**
         * <pre>
         * 虚线参数 Offset
         * </pre>
         *
         * <code>float lineDashIII = 9;</code>
         * @return The lineDashIII.
         */
        @java.lang.Override
        public float getLineDashIII() {
          return lineDashIII_;
        }
        /**
         * <pre>
         * 虚线参数 Offset
         * </pre>
         *
         * <code>float lineDashIII = 9;</code>
         * @param value The lineDashIII to set.
         * @return This builder for chaining.
         */
        public Builder setLineDashIII(float value) {
          
          lineDashIII_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 虚线参数 Offset
         * </pre>
         *
         * <code>float lineDashIII = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearLineDashIII() {
          
          lineDashIII_ = 0F;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.opensource.svga.ShapeEntity.ShapeStyle)
      }

      // @@protoc_insertion_point(class_scope:com.opensource.svga.ShapeEntity.ShapeStyle)
      private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle();
      }

      public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ShapeStyle>
          PARSER = new com.google.protobuf.AbstractParser<ShapeStyle>() {
        @java.lang.Override
        public ShapeStyle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ShapeStyle(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ShapeStyle> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ShapeStyle> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int argsCase_ = 0;
    private java.lang.Object args_;
    public enum ArgsCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SHAPE(2),
      RECT(3),
      ELLIPSE(4),
      ARGS_NOT_SET(0);
      private final int value;
      private ArgsCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ArgsCase valueOf(int value) {
        return forNumber(value);
      }

      public static ArgsCase forNumber(int value) {
        switch (value) {
          case 2: return SHAPE;
          case 3: return RECT;
          case 4: return ELLIPSE;
          case 0: return ARGS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ArgsCase
    getArgsCase() {
      return ArgsCase.forNumber(
          argsCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * 矢量类型
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * 矢量类型
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType getType() {
      @SuppressWarnings("deprecation")
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType result = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType.valueOf(type_);
      return result == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType.UNRECOGNIZED : result;
    }

    public static final int SHAPE_FIELD_NUMBER = 2;
    /**
     * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
     * @return Whether the shape field is set.
     */
    @java.lang.Override
    public boolean hasShape() {
      return argsCase_ == 2;
    }
    /**
     * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
     * @return The shape.
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs getShape() {
      if (argsCase_ == 2) {
         return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_;
      }
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance();
    }
    /**
     * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgsOrBuilder getShapeOrBuilder() {
      if (argsCase_ == 2) {
         return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_;
      }
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance();
    }

    public static final int RECT_FIELD_NUMBER = 3;
    /**
     * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
     * @return Whether the rect field is set.
     */
    @java.lang.Override
    public boolean hasRect() {
      return argsCase_ == 3;
    }
    /**
     * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
     * @return The rect.
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs getRect() {
      if (argsCase_ == 3) {
         return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_;
      }
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance();
    }
    /**
     * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgsOrBuilder getRectOrBuilder() {
      if (argsCase_ == 3) {
         return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_;
      }
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance();
    }

    public static final int ELLIPSE_FIELD_NUMBER = 4;
    /**
     * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
     * @return Whether the ellipse field is set.
     */
    @java.lang.Override
    public boolean hasEllipse() {
      return argsCase_ == 4;
    }
    /**
     * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
     * @return The ellipse.
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs getEllipse() {
      if (argsCase_ == 4) {
         return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_;
      }
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance();
    }
    /**
     * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgsOrBuilder getEllipseOrBuilder() {
      if (argsCase_ == 4) {
         return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_;
      }
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance();
    }

    public static final int STYLES_FIELD_NUMBER = 10;
    private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle styles_;
    /**
     * <pre>
     * 渲染参数
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
     * @return Whether the styles field is set.
     */
    @java.lang.Override
    public boolean hasStyles() {
      return styles_ != null;
    }
    /**
     * <pre>
     * 渲染参数
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
     * @return The styles.
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle getStyles() {
      return styles_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.getDefaultInstance() : styles_;
    }
    /**
     * <pre>
     * 渲染参数
     * </pre>
     *
     * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyleOrBuilder getStylesOrBuilder() {
      return getStyles();
    }

    public static final int TRANSFORM_FIELD_NUMBER = 11;
    private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform transform_;
    /**
     * <pre>
     * 矢量图层 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 11;</code>
     * @return Whether the transform field is set.
     */
    @java.lang.Override
    public boolean hasTransform() {
      return transform_ != null;
    }
    /**
     * <pre>
     * 矢量图层 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 11;</code>
     * @return The transform.
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getTransform() {
      return transform_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.getDefaultInstance() : transform_;
    }
    /**
     * <pre>
     * 矢量图层 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 11;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder getTransformOrBuilder() {
      return getTransform();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType.SHAPE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (argsCase_ == 2) {
        output.writeMessage(2, (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_);
      }
      if (argsCase_ == 3) {
        output.writeMessage(3, (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_);
      }
      if (argsCase_ == 4) {
        output.writeMessage(4, (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_);
      }
      if (styles_ != null) {
        output.writeMessage(10, getStyles());
      }
      if (transform_ != null) {
        output.writeMessage(11, getTransform());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType.SHAPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (argsCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_);
      }
      if (argsCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_);
      }
      if (argsCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_);
      }
      if (styles_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getStyles());
      }
      if (transform_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTransform());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity) obj;

      if (type_ != other.type_) return false;
      if (hasStyles() != other.hasStyles()) return false;
      if (hasStyles()) {
        if (!getStyles()
            .equals(other.getStyles())) return false;
      }
      if (hasTransform() != other.hasTransform()) return false;
      if (hasTransform()) {
        if (!getTransform()
            .equals(other.getTransform())) return false;
      }
      if (!getArgsCase().equals(other.getArgsCase())) return false;
      switch (argsCase_) {
        case 2:
          if (!getShape()
              .equals(other.getShape())) return false;
          break;
        case 3:
          if (!getRect()
              .equals(other.getRect())) return false;
          break;
        case 4:
          if (!getEllipse()
              .equals(other.getEllipse())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasStyles()) {
        hash = (37 * hash) + STYLES_FIELD_NUMBER;
        hash = (53 * hash) + getStyles().hashCode();
      }
      if (hasTransform()) {
        hash = (37 * hash) + TRANSFORM_FIELD_NUMBER;
        hash = (53 * hash) + getTransform().hashCode();
      }
      switch (argsCase_) {
        case 2:
          hash = (37 * hash) + SHAPE_FIELD_NUMBER;
          hash = (53 * hash) + getShape().hashCode();
          break;
        case 3:
          hash = (37 * hash) + RECT_FIELD_NUMBER;
          hash = (53 * hash) + getRect().hashCode();
          break;
        case 4:
          hash = (37 * hash) + ELLIPSE_FIELD_NUMBER;
          hash = (53 * hash) + getEllipse().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.opensource.svga.ShapeEntity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.opensource.svga.ShapeEntity)
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.Svga.ShapeEntity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (stylesBuilder_ == null) {
          styles_ = null;
        } else {
          styles_ = null;
          stylesBuilder_ = null;
        }
        if (transformBuilder_ == null) {
          transform_ = null;
        } else {
          transform_ = null;
          transformBuilder_ = null;
        }
        argsCase_ = 0;
        args_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_ShapeEntity_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity build() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity buildPartial() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity(this);
        result.type_ = type_;
        if (argsCase_ == 2) {
          if (shapeBuilder_ == null) {
            result.args_ = args_;
          } else {
            result.args_ = shapeBuilder_.build();
          }
        }
        if (argsCase_ == 3) {
          if (rectBuilder_ == null) {
            result.args_ = args_;
          } else {
            result.args_ = rectBuilder_.build();
          }
        }
        if (argsCase_ == 4) {
          if (ellipseBuilder_ == null) {
            result.args_ = args_;
          } else {
            result.args_ = ellipseBuilder_.build();
          }
        }
        if (stylesBuilder_ == null) {
          result.styles_ = styles_;
        } else {
          result.styles_ = stylesBuilder_.build();
        }
        if (transformBuilder_ == null) {
          result.transform_ = transform_;
        } else {
          result.transform_ = transformBuilder_.build();
        }
        result.argsCase_ = argsCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity) {
          return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity other) {
        if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasStyles()) {
          mergeStyles(other.getStyles());
        }
        if (other.hasTransform()) {
          mergeTransform(other.getTransform());
        }
        switch (other.getArgsCase()) {
          case SHAPE: {
            mergeShape(other.getShape());
            break;
          }
          case RECT: {
            mergeRect(other.getRect());
            break;
          }
          case ELLIPSE: {
            mergeEllipse(other.getEllipse());
            break;
          }
          case ARGS_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int argsCase_ = 0;
      private java.lang.Object args_;
      public ArgsCase
          getArgsCase() {
        return ArgsCase.forNumber(
            argsCase_);
      }

      public Builder clearArgs() {
        argsCase_ = 0;
        args_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       * 矢量类型
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * 矢量类型
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 矢量类型
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType getType() {
        @SuppressWarnings("deprecation")
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType result = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType.valueOf(type_);
        return result == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 矢量类型
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 矢量类型
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgsOrBuilder> shapeBuilder_;
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       * @return Whether the shape field is set.
       */
      @java.lang.Override
      public boolean hasShape() {
        return argsCase_ == 2;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       * @return The shape.
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs getShape() {
        if (shapeBuilder_ == null) {
          if (argsCase_ == 2) {
            return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_;
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance();
        } else {
          if (argsCase_ == 2) {
            return shapeBuilder_.getMessage();
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance();
        }
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       */
      public Builder setShape(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          args_ = value;
          onChanged();
        } else {
          shapeBuilder_.setMessage(value);
        }
        argsCase_ = 2;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       */
      public Builder setShape(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          args_ = builderForValue.build();
          onChanged();
        } else {
          shapeBuilder_.setMessage(builderForValue.build());
        }
        argsCase_ = 2;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       */
      public Builder mergeShape(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs value) {
        if (shapeBuilder_ == null) {
          if (argsCase_ == 2 &&
              args_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance()) {
            args_ = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.newBuilder((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_)
                .mergeFrom(value).buildPartial();
          } else {
            args_ = value;
          }
          onChanged();
        } else {
          if (argsCase_ == 2) {
            shapeBuilder_.mergeFrom(value);
          }
          shapeBuilder_.setMessage(value);
        }
        argsCase_ = 2;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       */
      public Builder clearShape() {
        if (shapeBuilder_ == null) {
          if (argsCase_ == 2) {
            argsCase_ = 0;
            args_ = null;
            onChanged();
          }
        } else {
          if (argsCase_ == 2) {
            argsCase_ = 0;
            args_ = null;
          }
          shapeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.Builder getShapeBuilder() {
        return getShapeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgsOrBuilder getShapeOrBuilder() {
        if ((argsCase_ == 2) && (shapeBuilder_ != null)) {
          return shapeBuilder_.getMessageOrBuilder();
        } else {
          if (argsCase_ == 2) {
            return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_;
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance();
        }
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.ShapeArgs shape = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgsOrBuilder>
          getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          if (!(argsCase_ == 2)) {
            args_ = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.getDefaultInstance();
          }
          shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgsOrBuilder>(
                  (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeArgs) args_,
                  getParentForChildren(),
                  isClean());
          args_ = null;
        }
        argsCase_ = 2;
        onChanged();;
        return shapeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgsOrBuilder> rectBuilder_;
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       * @return Whether the rect field is set.
       */
      @java.lang.Override
      public boolean hasRect() {
        return argsCase_ == 3;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       * @return The rect.
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs getRect() {
        if (rectBuilder_ == null) {
          if (argsCase_ == 3) {
            return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_;
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance();
        } else {
          if (argsCase_ == 3) {
            return rectBuilder_.getMessage();
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance();
        }
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       */
      public Builder setRect(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          args_ = value;
          onChanged();
        } else {
          rectBuilder_.setMessage(value);
        }
        argsCase_ = 3;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       */
      public Builder setRect(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.Builder builderForValue) {
        if (rectBuilder_ == null) {
          args_ = builderForValue.build();
          onChanged();
        } else {
          rectBuilder_.setMessage(builderForValue.build());
        }
        argsCase_ = 3;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       */
      public Builder mergeRect(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs value) {
        if (rectBuilder_ == null) {
          if (argsCase_ == 3 &&
              args_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance()) {
            args_ = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.newBuilder((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_)
                .mergeFrom(value).buildPartial();
          } else {
            args_ = value;
          }
          onChanged();
        } else {
          if (argsCase_ == 3) {
            rectBuilder_.mergeFrom(value);
          }
          rectBuilder_.setMessage(value);
        }
        argsCase_ = 3;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       */
      public Builder clearRect() {
        if (rectBuilder_ == null) {
          if (argsCase_ == 3) {
            argsCase_ = 0;
            args_ = null;
            onChanged();
          }
        } else {
          if (argsCase_ == 3) {
            argsCase_ = 0;
            args_ = null;
          }
          rectBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.Builder getRectBuilder() {
        return getRectFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgsOrBuilder getRectOrBuilder() {
        if ((argsCase_ == 3) && (rectBuilder_ != null)) {
          return rectBuilder_.getMessageOrBuilder();
        } else {
          if (argsCase_ == 3) {
            return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_;
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance();
        }
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.RectArgs rect = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgsOrBuilder>
          getRectFieldBuilder() {
        if (rectBuilder_ == null) {
          if (!(argsCase_ == 3)) {
            args_ = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.getDefaultInstance();
          }
          rectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgsOrBuilder>(
                  (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.RectArgs) args_,
                  getParentForChildren(),
                  isClean());
          args_ = null;
        }
        argsCase_ = 3;
        onChanged();;
        return rectBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgsOrBuilder> ellipseBuilder_;
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       * @return Whether the ellipse field is set.
       */
      @java.lang.Override
      public boolean hasEllipse() {
        return argsCase_ == 4;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       * @return The ellipse.
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs getEllipse() {
        if (ellipseBuilder_ == null) {
          if (argsCase_ == 4) {
            return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_;
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance();
        } else {
          if (argsCase_ == 4) {
            return ellipseBuilder_.getMessage();
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance();
        }
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       */
      public Builder setEllipse(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs value) {
        if (ellipseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          args_ = value;
          onChanged();
        } else {
          ellipseBuilder_.setMessage(value);
        }
        argsCase_ = 4;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       */
      public Builder setEllipse(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.Builder builderForValue) {
        if (ellipseBuilder_ == null) {
          args_ = builderForValue.build();
          onChanged();
        } else {
          ellipseBuilder_.setMessage(builderForValue.build());
        }
        argsCase_ = 4;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       */
      public Builder mergeEllipse(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs value) {
        if (ellipseBuilder_ == null) {
          if (argsCase_ == 4 &&
              args_ != com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance()) {
            args_ = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.newBuilder((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_)
                .mergeFrom(value).buildPartial();
          } else {
            args_ = value;
          }
          onChanged();
        } else {
          if (argsCase_ == 4) {
            ellipseBuilder_.mergeFrom(value);
          }
          ellipseBuilder_.setMessage(value);
        }
        argsCase_ = 4;
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       */
      public Builder clearEllipse() {
        if (ellipseBuilder_ == null) {
          if (argsCase_ == 4) {
            argsCase_ = 0;
            args_ = null;
            onChanged();
          }
        } else {
          if (argsCase_ == 4) {
            argsCase_ = 0;
            args_ = null;
          }
          ellipseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.Builder getEllipseBuilder() {
        return getEllipseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       */
      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgsOrBuilder getEllipseOrBuilder() {
        if ((argsCase_ == 4) && (ellipseBuilder_ != null)) {
          return ellipseBuilder_.getMessageOrBuilder();
        } else {
          if (argsCase_ == 4) {
            return (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_;
          }
          return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance();
        }
      }
      /**
       * <code>.com.opensource.svga.ShapeEntity.EllipseArgs ellipse = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgsOrBuilder>
          getEllipseFieldBuilder() {
        if (ellipseBuilder_ == null) {
          if (!(argsCase_ == 4)) {
            args_ = com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.getDefaultInstance();
          }
          ellipseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgsOrBuilder>(
                  (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.EllipseArgs) args_,
                  getParentForChildren(),
                  isClean());
          args_ = null;
        }
        argsCase_ = 4;
        onChanged();;
        return ellipseBuilder_;
      }

      private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle styles_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyleOrBuilder> stylesBuilder_;
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       * @return Whether the styles field is set.
       */
      public boolean hasStyles() {
        return stylesBuilder_ != null || styles_ != null;
      }
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       * @return The styles.
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle getStyles() {
        if (stylesBuilder_ == null) {
          return styles_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.getDefaultInstance() : styles_;
        } else {
          return stylesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       */
      public Builder setStyles(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle value) {
        if (stylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          styles_ = value;
          onChanged();
        } else {
          stylesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       */
      public Builder setStyles(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.Builder builderForValue) {
        if (stylesBuilder_ == null) {
          styles_ = builderForValue.build();
          onChanged();
        } else {
          stylesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       */
      public Builder mergeStyles(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle value) {
        if (stylesBuilder_ == null) {
          if (styles_ != null) {
            styles_ =
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.newBuilder(styles_).mergeFrom(value).buildPartial();
          } else {
            styles_ = value;
          }
          onChanged();
        } else {
          stylesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       */
      public Builder clearStyles() {
        if (stylesBuilder_ == null) {
          styles_ = null;
          onChanged();
        } else {
          styles_ = null;
          stylesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.Builder getStylesBuilder() {
        
        onChanged();
        return getStylesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyleOrBuilder getStylesOrBuilder() {
        if (stylesBuilder_ != null) {
          return stylesBuilder_.getMessageOrBuilder();
        } else {
          return styles_ == null ?
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.getDefaultInstance() : styles_;
        }
      }
      /**
       * <pre>
       * 渲染参数
       * </pre>
       *
       * <code>.com.opensource.svga.ShapeEntity.ShapeStyle styles = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyleOrBuilder>
          getStylesFieldBuilder() {
        if (stylesBuilder_ == null) {
          stylesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyle.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.ShapeStyleOrBuilder>(
                  getStyles(),
                  getParentForChildren(),
                  isClean());
          styles_ = null;
        }
        return stylesBuilder_;
      }

      private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform transform_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder> transformBuilder_;
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       * @return Whether the transform field is set.
       */
      public boolean hasTransform() {
        return transformBuilder_ != null || transform_ != null;
      }
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       * @return The transform.
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getTransform() {
        if (transformBuilder_ == null) {
          return transform_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.getDefaultInstance() : transform_;
        } else {
          return transformBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       */
      public Builder setTransform(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform value) {
        if (transformBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transform_ = value;
          onChanged();
        } else {
          transformBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       */
      public Builder setTransform(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder builderForValue) {
        if (transformBuilder_ == null) {
          transform_ = builderForValue.build();
          onChanged();
        } else {
          transformBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       */
      public Builder mergeTransform(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform value) {
        if (transformBuilder_ == null) {
          if (transform_ != null) {
            transform_ =
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.newBuilder(transform_).mergeFrom(value).buildPartial();
          } else {
            transform_ = value;
          }
          onChanged();
        } else {
          transformBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       */
      public Builder clearTransform() {
        if (transformBuilder_ == null) {
          transform_ = null;
          onChanged();
        } else {
          transform_ = null;
          transformBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder getTransformBuilder() {
        
        onChanged();
        return getTransformFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder getTransformOrBuilder() {
        if (transformBuilder_ != null) {
          return transformBuilder_.getMessageOrBuilder();
        } else {
          return transform_ == null ?
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.getDefaultInstance() : transform_;
        }
      }
      /**
       * <pre>
       * 矢量图层 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder>
          getTransformFieldBuilder() {
        if (transformBuilder_ == null) {
          transformBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder>(
                  getTransform(),
                  getParentForChildren(),
                  isClean());
          transform_ = null;
        }
        return transformBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.opensource.svga.ShapeEntity)
    }

    // @@protoc_insertion_point(class_scope:com.opensource.svga.ShapeEntity)
    private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity();
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShapeEntity>
        PARSER = new com.google.protobuf.AbstractParser<ShapeEntity>() {
      @java.lang.Override
      public ShapeEntity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShapeEntity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ShapeEntity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShapeEntity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FrameEntityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.opensource.svga.FrameEntity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 透明度
     * </pre>
     *
     * <code>float alpha = 1;</code>
     * @return The alpha.
     */
    float getAlpha();

    /**
     * <pre>
     * 初始约束大小
     * </pre>
     *
     * <code>.com.opensource.svga.Layout layout = 2;</code>
     * @return Whether the layout field is set.
     */
    boolean hasLayout();
    /**
     * <pre>
     * 初始约束大小
     * </pre>
     *
     * <code>.com.opensource.svga.Layout layout = 2;</code>
     * @return The layout.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout getLayout();
    /**
     * <pre>
     * 初始约束大小
     * </pre>
     *
     * <code>.com.opensource.svga.Layout layout = 2;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.LayoutOrBuilder getLayoutOrBuilder();

    /**
     * <pre>
     * 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 3;</code>
     * @return Whether the transform field is set.
     */
    boolean hasTransform();
    /**
     * <pre>
     * 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 3;</code>
     * @return The transform.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getTransform();
    /**
     * <pre>
     * 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 3;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder getTransformOrBuilder();

    /**
     * <pre>
     * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
     * </pre>
     *
     * <code>string clipPath = 4;</code>
     * @return The clipPath.
     */
    java.lang.String getClipPath();
    /**
     * <pre>
     * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
     * </pre>
     *
     * <code>string clipPath = 4;</code>
     * @return The bytes for clipPath.
     */
    com.google.protobuf.ByteString
        getClipPathBytes();

    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity>
        getShapesList();
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity getShapes(int index);
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    int getShapesCount();
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder>
        getShapesOrBuilderList();
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder getShapesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.opensource.svga.FrameEntity}
   */
  public static final class FrameEntity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.opensource.svga.FrameEntity)
      FrameEntityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FrameEntity.newBuilder() to construct.
    private FrameEntity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FrameEntity() {
      clipPath_ = "";
      shapes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FrameEntity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FrameEntity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              alpha_ = input.readFloat();
              break;
            }
            case 18: {
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.Builder subBuilder = null;
              if (layout_ != null) {
                subBuilder = layout_.toBuilder();
              }
              layout_ = input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(layout_);
                layout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder subBuilder = null;
              if (transform_ != null) {
                subBuilder = transform_.toBuilder();
              }
              transform_ = input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transform_);
                transform_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              clipPath_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                shapes_ = new java.util.ArrayList<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity>();
                mutable_bitField0_ |= 0x00000001;
              }
              shapes_.add(
                  input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          shapes_ = java.util.Collections.unmodifiableList(shapes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_FrameEntity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_FrameEntity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder.class);
    }

    public static final int ALPHA_FIELD_NUMBER = 1;
    private float alpha_;
    /**
     * <pre>
     * 透明度
     * </pre>
     *
     * <code>float alpha = 1;</code>
     * @return The alpha.
     */
    @java.lang.Override
    public float getAlpha() {
      return alpha_;
    }

    public static final int LAYOUT_FIELD_NUMBER = 2;
    private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout layout_;
    /**
     * <pre>
     * 初始约束大小
     * </pre>
     *
     * <code>.com.opensource.svga.Layout layout = 2;</code>
     * @return Whether the layout field is set.
     */
    @java.lang.Override
    public boolean hasLayout() {
      return layout_ != null;
    }
    /**
     * <pre>
     * 初始约束大小
     * </pre>
     *
     * <code>.com.opensource.svga.Layout layout = 2;</code>
     * @return The layout.
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout getLayout() {
      return layout_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.getDefaultInstance() : layout_;
    }
    /**
     * <pre>
     * 初始约束大小
     * </pre>
     *
     * <code>.com.opensource.svga.Layout layout = 2;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.LayoutOrBuilder getLayoutOrBuilder() {
      return getLayout();
    }

    public static final int TRANSFORM_FIELD_NUMBER = 3;
    private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform transform_;
    /**
     * <pre>
     * 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 3;</code>
     * @return Whether the transform field is set.
     */
    @java.lang.Override
    public boolean hasTransform() {
      return transform_ != null;
    }
    /**
     * <pre>
     * 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 3;</code>
     * @return The transform.
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getTransform() {
      return transform_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.getDefaultInstance() : transform_;
    }
    /**
     * <pre>
     * 2D 变换矩阵
     * </pre>
     *
     * <code>.com.opensource.svga.Transform transform = 3;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder getTransformOrBuilder() {
      return getTransform();
    }

    public static final int CLIPPATH_FIELD_NUMBER = 4;
    private volatile java.lang.Object clipPath_;
    /**
     * <pre>
     * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
     * </pre>
     *
     * <code>string clipPath = 4;</code>
     * @return The clipPath.
     */
    @java.lang.Override
    public java.lang.String getClipPath() {
      java.lang.Object ref = clipPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clipPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
     * </pre>
     *
     * <code>string clipPath = 4;</code>
     * @return The bytes for clipPath.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClipPathBytes() {
      java.lang.Object ref = clipPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clipPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHAPES_FIELD_NUMBER = 5;
    private java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity> shapes_;
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    @java.lang.Override
    public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity> getShapesList() {
      return shapes_;
    }
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder>
        getShapesOrBuilderList() {
      return shapes_;
    }
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    @java.lang.Override
    public int getShapesCount() {
      return shapes_.size();
    }
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity getShapes(int index) {
      return shapes_.get(index);
    }
    /**
     * <pre>
     * 矢量元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder getShapesOrBuilder(
        int index) {
      return shapes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (alpha_ != 0F) {
        output.writeFloat(1, alpha_);
      }
      if (layout_ != null) {
        output.writeMessage(2, getLayout());
      }
      if (transform_ != null) {
        output.writeMessage(3, getTransform());
      }
      if (!getClipPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clipPath_);
      }
      for (int i = 0; i < shapes_.size(); i++) {
        output.writeMessage(5, shapes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (alpha_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, alpha_);
      }
      if (layout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLayout());
      }
      if (transform_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTransform());
      }
      if (!getClipPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clipPath_);
      }
      for (int i = 0; i < shapes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, shapes_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity) obj;

      if (java.lang.Float.floatToIntBits(getAlpha())
          != java.lang.Float.floatToIntBits(
              other.getAlpha())) return false;
      if (hasLayout() != other.hasLayout()) return false;
      if (hasLayout()) {
        if (!getLayout()
            .equals(other.getLayout())) return false;
      }
      if (hasTransform() != other.hasTransform()) return false;
      if (hasTransform()) {
        if (!getTransform()
            .equals(other.getTransform())) return false;
      }
      if (!getClipPath()
          .equals(other.getClipPath())) return false;
      if (!getShapesList()
          .equals(other.getShapesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALPHA_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAlpha());
      if (hasLayout()) {
        hash = (37 * hash) + LAYOUT_FIELD_NUMBER;
        hash = (53 * hash) + getLayout().hashCode();
      }
      if (hasTransform()) {
        hash = (37 * hash) + TRANSFORM_FIELD_NUMBER;
        hash = (53 * hash) + getTransform().hashCode();
      }
      hash = (37 * hash) + CLIPPATH_FIELD_NUMBER;
      hash = (53 * hash) + getClipPath().hashCode();
      if (getShapesCount() > 0) {
        hash = (37 * hash) + SHAPES_FIELD_NUMBER;
        hash = (53 * hash) + getShapesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.opensource.svga.FrameEntity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.opensource.svga.FrameEntity)
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_FrameEntity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_FrameEntity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.Svga.FrameEntity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getShapesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        alpha_ = 0F;

        if (layoutBuilder_ == null) {
          layout_ = null;
        } else {
          layout_ = null;
          layoutBuilder_ = null;
        }
        if (transformBuilder_ == null) {
          transform_ = null;
        } else {
          transform_ = null;
          transformBuilder_ = null;
        }
        clipPath_ = "";

        if (shapesBuilder_ == null) {
          shapes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          shapesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_FrameEntity_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity build() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity buildPartial() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity(this);
        int from_bitField0_ = bitField0_;
        result.alpha_ = alpha_;
        if (layoutBuilder_ == null) {
          result.layout_ = layout_;
        } else {
          result.layout_ = layoutBuilder_.build();
        }
        if (transformBuilder_ == null) {
          result.transform_ = transform_;
        } else {
          result.transform_ = transformBuilder_.build();
        }
        result.clipPath_ = clipPath_;
        if (shapesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            shapes_ = java.util.Collections.unmodifiableList(shapes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.shapes_ = shapes_;
        } else {
          result.shapes_ = shapesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity) {
          return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity other) {
        if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity.getDefaultInstance()) return this;
        if (other.getAlpha() != 0F) {
          setAlpha(other.getAlpha());
        }
        if (other.hasLayout()) {
          mergeLayout(other.getLayout());
        }
        if (other.hasTransform()) {
          mergeTransform(other.getTransform());
        }
        if (!other.getClipPath().isEmpty()) {
          clipPath_ = other.clipPath_;
          onChanged();
        }
        if (shapesBuilder_ == null) {
          if (!other.shapes_.isEmpty()) {
            if (shapes_.isEmpty()) {
              shapes_ = other.shapes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureShapesIsMutable();
              shapes_.addAll(other.shapes_);
            }
            onChanged();
          }
        } else {
          if (!other.shapes_.isEmpty()) {
            if (shapesBuilder_.isEmpty()) {
              shapesBuilder_.dispose();
              shapesBuilder_ = null;
              shapes_ = other.shapes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              shapesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getShapesFieldBuilder() : null;
            } else {
              shapesBuilder_.addAllMessages(other.shapes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float alpha_ ;
      /**
       * <pre>
       * 透明度
       * </pre>
       *
       * <code>float alpha = 1;</code>
       * @return The alpha.
       */
      @java.lang.Override
      public float getAlpha() {
        return alpha_;
      }
      /**
       * <pre>
       * 透明度
       * </pre>
       *
       * <code>float alpha = 1;</code>
       * @param value The alpha to set.
       * @return This builder for chaining.
       */
      public Builder setAlpha(float value) {
        
        alpha_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 透明度
       * </pre>
       *
       * <code>float alpha = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlpha() {
        
        alpha_ = 0F;
        onChanged();
        return this;
      }

      private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout layout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.LayoutOrBuilder> layoutBuilder_;
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       * @return Whether the layout field is set.
       */
      public boolean hasLayout() {
        return layoutBuilder_ != null || layout_ != null;
      }
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       * @return The layout.
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout getLayout() {
        if (layoutBuilder_ == null) {
          return layout_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.getDefaultInstance() : layout_;
        } else {
          return layoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       */
      public Builder setLayout(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout value) {
        if (layoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          layout_ = value;
          onChanged();
        } else {
          layoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       */
      public Builder setLayout(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.Builder builderForValue) {
        if (layoutBuilder_ == null) {
          layout_ = builderForValue.build();
          onChanged();
        } else {
          layoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       */
      public Builder mergeLayout(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout value) {
        if (layoutBuilder_ == null) {
          if (layout_ != null) {
            layout_ =
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.newBuilder(layout_).mergeFrom(value).buildPartial();
          } else {
            layout_ = value;
          }
          onChanged();
        } else {
          layoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       */
      public Builder clearLayout() {
        if (layoutBuilder_ == null) {
          layout_ = null;
          onChanged();
        } else {
          layout_ = null;
          layoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.Builder getLayoutBuilder() {
        
        onChanged();
        return getLayoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.LayoutOrBuilder getLayoutOrBuilder() {
        if (layoutBuilder_ != null) {
          return layoutBuilder_.getMessageOrBuilder();
        } else {
          return layout_ == null ?
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.getDefaultInstance() : layout_;
        }
      }
      /**
       * <pre>
       * 初始约束大小
       * </pre>
       *
       * <code>.com.opensource.svga.Layout layout = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.LayoutOrBuilder>
          getLayoutFieldBuilder() {
        if (layoutBuilder_ == null) {
          layoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Layout.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.LayoutOrBuilder>(
                  getLayout(),
                  getParentForChildren(),
                  isClean());
          layout_ = null;
        }
        return layoutBuilder_;
      }

      private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform transform_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder> transformBuilder_;
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       * @return Whether the transform field is set.
       */
      public boolean hasTransform() {
        return transformBuilder_ != null || transform_ != null;
      }
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       * @return The transform.
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform getTransform() {
        if (transformBuilder_ == null) {
          return transform_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.getDefaultInstance() : transform_;
        } else {
          return transformBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       */
      public Builder setTransform(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform value) {
        if (transformBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transform_ = value;
          onChanged();
        } else {
          transformBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       */
      public Builder setTransform(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder builderForValue) {
        if (transformBuilder_ == null) {
          transform_ = builderForValue.build();
          onChanged();
        } else {
          transformBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       */
      public Builder mergeTransform(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform value) {
        if (transformBuilder_ == null) {
          if (transform_ != null) {
            transform_ =
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.newBuilder(transform_).mergeFrom(value).buildPartial();
          } else {
            transform_ = value;
          }
          onChanged();
        } else {
          transformBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       */
      public Builder clearTransform() {
        if (transformBuilder_ == null) {
          transform_ = null;
          onChanged();
        } else {
          transform_ = null;
          transformBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder getTransformBuilder() {
        
        onChanged();
        return getTransformFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder getTransformOrBuilder() {
        if (transformBuilder_ != null) {
          return transformBuilder_.getMessageOrBuilder();
        } else {
          return transform_ == null ?
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.getDefaultInstance() : transform_;
        }
      }
      /**
       * <pre>
       * 2D 变换矩阵
       * </pre>
       *
       * <code>.com.opensource.svga.Transform transform = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder>
          getTransformFieldBuilder() {
        if (transformBuilder_ == null) {
          transformBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.Transform.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.TransformOrBuilder>(
                  getTransform(),
                  getParentForChildren(),
                  isClean());
          transform_ = null;
        }
        return transformBuilder_;
      }

      private java.lang.Object clipPath_ = "";
      /**
       * <pre>
       * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
       * </pre>
       *
       * <code>string clipPath = 4;</code>
       * @return The clipPath.
       */
      public java.lang.String getClipPath() {
        java.lang.Object ref = clipPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clipPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
       * </pre>
       *
       * <code>string clipPath = 4;</code>
       * @return The bytes for clipPath.
       */
      public com.google.protobuf.ByteString
          getClipPathBytes() {
        java.lang.Object ref = clipPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clipPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
       * </pre>
       *
       * <code>string clipPath = 4;</code>
       * @param value The clipPath to set.
       * @return This builder for chaining.
       */
      public Builder setClipPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clipPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
       * </pre>
       *
       * <code>string clipPath = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearClipPath() {
        
        clipPath_ = getDefaultInstance().getClipPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。
       * </pre>
       *
       * <code>string clipPath = 4;</code>
       * @param value The bytes for clipPath to set.
       * @return This builder for chaining.
       */
      public Builder setClipPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        clipPath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity> shapes_ =
        java.util.Collections.emptyList();
      private void ensureShapesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          shapes_ = new java.util.ArrayList<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity>(shapes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder> shapesBuilder_;

      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity> getShapesList() {
        if (shapesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shapes_);
        } else {
          return shapesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public int getShapesCount() {
        if (shapesBuilder_ == null) {
          return shapes_.size();
        } else {
          return shapesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity getShapes(int index) {
        if (shapesBuilder_ == null) {
          return shapes_.get(index);
        } else {
          return shapesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder setShapes(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.set(index, value);
          onChanged();
        } else {
          shapesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder setShapes(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.set(index, builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder addShapes(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.add(value);
          onChanged();
        } else {
          shapesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder addShapes(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.add(index, value);
          onChanged();
        } else {
          shapesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder addShapes(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.add(builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder addShapes(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.add(index, builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder addAllShapes(
          java.lang.Iterable<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity> values) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shapes_);
          onChanged();
        } else {
          shapesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder clearShapes() {
        if (shapesBuilder_ == null) {
          shapes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          shapesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public Builder removeShapes(int index) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.remove(index);
          onChanged();
        } else {
          shapesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder getShapesBuilder(
          int index) {
        return getShapesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder getShapesOrBuilder(
          int index) {
        if (shapesBuilder_ == null) {
          return shapes_.get(index);  } else {
          return shapesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder>
           getShapesOrBuilderList() {
        if (shapesBuilder_ != null) {
          return shapesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shapes_);
        }
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder addShapesBuilder() {
        return getShapesFieldBuilder().addBuilder(
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.getDefaultInstance());
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder addShapesBuilder(
          int index) {
        return getShapesFieldBuilder().addBuilder(
            index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.getDefaultInstance());
      }
      /**
       * <pre>
       * 矢量元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.ShapeEntity shapes = 5;</code>
       */
      public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder>
           getShapesBuilderList() {
        return getShapesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder>
          getShapesFieldBuilder() {
        if (shapesBuilder_ == null) {
          shapesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.ShapeEntityOrBuilder>(
                  shapes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          shapes_ = null;
        }
        return shapesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.opensource.svga.FrameEntity)
    }

    // @@protoc_insertion_point(class_scope:com.opensource.svga.FrameEntity)
    private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity();
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FrameEntity>
        PARSER = new com.google.protobuf.AbstractParser<FrameEntity>() {
      @java.lang.Override
      public FrameEntity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FrameEntity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FrameEntity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FrameEntity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.FrameEntity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MovieEntityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.opensource.svga.MovieEntity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * SVGA 格式版本号
     * </pre>
     *
     * <code>string version = 1;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * SVGA 格式版本号
     * </pre>
     *
     * <code>string version = 1;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * 动画参数
     * </pre>
     *
     * <code>.com.opensource.svga.MovieParams params = 2;</code>
     * @return Whether the params field is set.
     */
    boolean hasParams();
    /**
     * <pre>
     * 动画参数
     * </pre>
     *
     * <code>.com.opensource.svga.MovieParams params = 2;</code>
     * @return The params.
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams getParams();
    /**
     * <pre>
     * 动画参数
     * </pre>
     *
     * <code>.com.opensource.svga.MovieParams params = 2;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParamsOrBuilder getParamsOrBuilder();

    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */
    int getImagesCount();
    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */
    boolean containsImages(
        java.lang.String key);
    /**
     * Use {@link #getImagesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getImages();
    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getImagesMap();
    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */

    com.google.protobuf.ByteString getImagesOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */

    com.google.protobuf.ByteString getImagesOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity>
        getSpritesList();
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity getSprites(int index);
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    int getSpritesCount();
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder>
        getSpritesOrBuilderList();
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder getSpritesOrBuilder(
        int index);

    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity>
        getAudiosList();
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity getAudios(int index);
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    int getAudiosCount();
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder>
        getAudiosOrBuilderList();
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder getAudiosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.opensource.svga.MovieEntity}
   */
  public static final class MovieEntity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.opensource.svga.MovieEntity)
      MovieEntityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MovieEntity.newBuilder() to construct.
    private MovieEntity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MovieEntity() {
      version_ = "";
      sprites_ = java.util.Collections.emptyList();
      audios_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MovieEntity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MovieEntity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 18: {
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.Builder subBuilder = null;
              if (params_ != null) {
                subBuilder = params_.toBuilder();
              }
              params_ = input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(params_);
                params_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                images_ = com.google.protobuf.MapField.newMapField(
                    ImagesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              images__ = input.readMessage(
                  ImagesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              images_.getMutableMap().put(
                  images__.getKey(), images__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                sprites_ = new java.util.ArrayList<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity>();
                mutable_bitField0_ |= 0x00000002;
              }
              sprites_.add(
                  input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                audios_ = new java.util.ArrayList<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity>();
                mutable_bitField0_ |= 0x00000004;
              }
              audios_.add(
                  input.readMessage(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          sprites_ = java.util.Collections.unmodifiableList(sprites_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          audios_ = java.util.Collections.unmodifiableList(audios_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieEntity_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetImages();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieEntity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * SVGA 格式版本号
     * </pre>
     *
     * <code>string version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * SVGA 格式版本号
     * </pre>
     *
     * <code>string version = 1;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAMS_FIELD_NUMBER = 2;
    private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams params_;
    /**
     * <pre>
     * 动画参数
     * </pre>
     *
     * <code>.com.opensource.svga.MovieParams params = 2;</code>
     * @return Whether the params field is set.
     */
    @java.lang.Override
    public boolean hasParams() {
      return params_ != null;
    }
    /**
     * <pre>
     * 动画参数
     * </pre>
     *
     * <code>.com.opensource.svga.MovieParams params = 2;</code>
     * @return The params.
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams getParams() {
      return params_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.getDefaultInstance() : params_;
    }
    /**
     * <pre>
     * 动画参数
     * </pre>
     *
     * <code>.com.opensource.svga.MovieParams params = 2;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParamsOrBuilder getParamsOrBuilder() {
      return getParams();
    }

    public static final int IMAGES_FIELD_NUMBER = 3;
    private static final class ImagesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieEntity_ImagesEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> images_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetImages() {
      if (images_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ImagesDefaultEntryHolder.defaultEntry);
      }
      return images_;
    }

    public int getImagesCount() {
      return internalGetImages().getMap().size();
    }
    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */

    @java.lang.Override
    public boolean containsImages(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetImages().getMap().containsKey(key);
    }
    /**
     * Use {@link #getImagesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getImages() {
      return getImagesMap();
    }
    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getImagesMap() {
      return internalGetImages().getMap();
    }
    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getImagesOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetImages().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; images = 3;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getImagesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetImages().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SPRITES_FIELD_NUMBER = 4;
    private java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity> sprites_;
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity> getSpritesList() {
      return sprites_;
    }
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder>
        getSpritesOrBuilderList() {
      return sprites_;
    }
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    @java.lang.Override
    public int getSpritesCount() {
      return sprites_.size();
    }
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity getSprites(int index) {
      return sprites_.get(index);
    }
    /**
     * <pre>
     * 元素列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder getSpritesOrBuilder(
        int index) {
      return sprites_.get(index);
    }

    public static final int AUDIOS_FIELD_NUMBER = 5;
    private java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity> audios_;
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    @java.lang.Override
    public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity> getAudiosList() {
      return audios_;
    }
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder>
        getAudiosOrBuilderList() {
      return audios_;
    }
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    @java.lang.Override
    public int getAudiosCount() {
      return audios_.size();
    }
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity getAudios(int index) {
      return audios_.get(index);
    }
    /**
     * <pre>
     * 音频列表
     * </pre>
     *
     * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
     */
    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder getAudiosOrBuilder(
        int index) {
      return audios_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
      }
      if (params_ != null) {
        output.writeMessage(2, getParams());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetImages(),
          ImagesDefaultEntryHolder.defaultEntry,
          3);
      for (int i = 0; i < sprites_.size(); i++) {
        output.writeMessage(4, sprites_.get(i));
      }
      for (int i = 0; i < audios_.size(); i++) {
        output.writeMessage(5, audios_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
      }
      if (params_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParams());
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetImages().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        images__ = ImagesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, images__);
      }
      for (int i = 0; i < sprites_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sprites_.get(i));
      }
      for (int i = 0; i < audios_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, audios_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity)) {
        return super.equals(obj);
      }
      com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity other = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity) obj;

      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (hasParams() != other.hasParams()) return false;
      if (hasParams()) {
        if (!getParams()
            .equals(other.getParams())) return false;
      }
      if (!internalGetImages().equals(
          other.internalGetImages())) return false;
      if (!getSpritesList()
          .equals(other.getSpritesList())) return false;
      if (!getAudiosList()
          .equals(other.getAudiosList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      if (hasParams()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParams().hashCode();
      }
      if (!internalGetImages().getMap().isEmpty()) {
        hash = (37 * hash) + IMAGES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetImages().hashCode();
      }
      if (getSpritesCount() > 0) {
        hash = (37 * hash) + SPRITES_FIELD_NUMBER;
        hash = (53 * hash) + getSpritesList().hashCode();
      }
      if (getAudiosCount() > 0) {
        hash = (37 * hash) + AUDIOS_FIELD_NUMBER;
        hash = (53 * hash) + getAudiosList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.opensource.svga.MovieEntity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.opensource.svga.MovieEntity)
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieEntity_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetImages();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableImages();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieEntity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity.class, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity.Builder.class);
      }

      // Construct using com.svga.plugin.svga_plugin.proto.Svga.MovieEntity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSpritesFieldBuilder();
          getAudiosFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = "";

        if (paramsBuilder_ == null) {
          params_ = null;
        } else {
          params_ = null;
          paramsBuilder_ = null;
        }
        internalGetMutableImages().clear();
        if (spritesBuilder_ == null) {
          sprites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          spritesBuilder_.clear();
        }
        if (audiosBuilder_ == null) {
          audios_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          audiosBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.internal_static_com_opensource_svga_MovieEntity_descriptor;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity getDefaultInstanceForType() {
        return com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity.getDefaultInstance();
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity build() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity buildPartial() {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity result = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity(this);
        int from_bitField0_ = bitField0_;
        result.version_ = version_;
        if (paramsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = paramsBuilder_.build();
        }
        result.images_ = internalGetImages();
        result.images_.makeImmutable();
        if (spritesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            sprites_ = java.util.Collections.unmodifiableList(sprites_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sprites_ = sprites_;
        } else {
          result.sprites_ = spritesBuilder_.build();
        }
        if (audiosBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            audios_ = java.util.Collections.unmodifiableList(audios_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.audios_ = audios_;
        } else {
          result.audios_ = audiosBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity) {
          return mergeFrom((com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity other) {
        if (other == com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity.getDefaultInstance()) return this;
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        internalGetMutableImages().mergeFrom(
            other.internalGetImages());
        if (spritesBuilder_ == null) {
          if (!other.sprites_.isEmpty()) {
            if (sprites_.isEmpty()) {
              sprites_ = other.sprites_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSpritesIsMutable();
              sprites_.addAll(other.sprites_);
            }
            onChanged();
          }
        } else {
          if (!other.sprites_.isEmpty()) {
            if (spritesBuilder_.isEmpty()) {
              spritesBuilder_.dispose();
              spritesBuilder_ = null;
              sprites_ = other.sprites_;
              bitField0_ = (bitField0_ & ~0x00000002);
              spritesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSpritesFieldBuilder() : null;
            } else {
              spritesBuilder_.addAllMessages(other.sprites_);
            }
          }
        }
        if (audiosBuilder_ == null) {
          if (!other.audios_.isEmpty()) {
            if (audios_.isEmpty()) {
              audios_ = other.audios_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAudiosIsMutable();
              audios_.addAll(other.audios_);
            }
            onChanged();
          }
        } else {
          if (!other.audios_.isEmpty()) {
            if (audiosBuilder_.isEmpty()) {
              audiosBuilder_.dispose();
              audiosBuilder_ = null;
              audios_ = other.audios_;
              bitField0_ = (bitField0_ & ~0x00000004);
              audiosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAudiosFieldBuilder() : null;
            } else {
              audiosBuilder_.addAllMessages(other.audios_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * SVGA 格式版本号
       * </pre>
       *
       * <code>string version = 1;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * SVGA 格式版本号
       * </pre>
       *
       * <code>string version = 1;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * SVGA 格式版本号
       * </pre>
       *
       * <code>string version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SVGA 格式版本号
       * </pre>
       *
       * <code>string version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SVGA 格式版本号
       * </pre>
       *
       * <code>string version = 1;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams params_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParamsOrBuilder> paramsBuilder_;
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       * @return Whether the params field is set.
       */
      public boolean hasParams() {
        return paramsBuilder_ != null || params_ != null;
      }
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       * @return The params.
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams getParams() {
        if (paramsBuilder_ == null) {
          return params_ == null ? com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.getDefaultInstance() : params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       */
      public Builder setParams(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
          onChanged();
        } else {
          paramsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       */
      public Builder setParams(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
          onChanged();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       */
      public Builder mergeParams(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams value) {
        if (paramsBuilder_ == null) {
          if (params_ != null) {
            params_ =
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.newBuilder(params_).mergeFrom(value).buildPartial();
          } else {
            params_ = value;
          }
          onChanged();
        } else {
          paramsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       */
      public Builder clearParams() {
        if (paramsBuilder_ == null) {
          params_ = null;
          onChanged();
        } else {
          params_ = null;
          paramsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.Builder getParamsBuilder() {
        
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_ == null ?
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.getDefaultInstance() : params_;
        }
      }
      /**
       * <pre>
       * 动画参数
       * </pre>
       *
       * <code>.com.opensource.svga.MovieParams params = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParamsOrBuilder>
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParams.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieParamsOrBuilder>(
                  getParams(),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> images_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetImages() {
        if (images_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ImagesDefaultEntryHolder.defaultEntry);
        }
        return images_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableImages() {
        onChanged();;
        if (images_ == null) {
          images_ = com.google.protobuf.MapField.newMapField(
              ImagesDefaultEntryHolder.defaultEntry);
        }
        if (!images_.isMutable()) {
          images_ = images_.copy();
        }
        return images_;
      }

      public int getImagesCount() {
        return internalGetImages().getMap().size();
      }
      /**
       * <pre>
       * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; images = 3;</code>
       */

      @java.lang.Override
      public boolean containsImages(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetImages().getMap().containsKey(key);
      }
      /**
       * Use {@link #getImagesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getImages() {
        return getImagesMap();
      }
      /**
       * <pre>
       * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; images = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getImagesMap() {
        return internalGetImages().getMap();
      }
      /**
       * <pre>
       * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; images = 3;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getImagesOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetImages().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; images = 3;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getImagesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetImages().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearImages() {
        internalGetMutableImages().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; images = 3;</code>
       */

      public Builder removeImages(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableImages().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableImages() {
        return internalGetMutableImages().getMutableMap();
      }
      /**
       * <pre>
       * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; images = 3;</code>
       */
      public Builder putImages(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableImages().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Key 是位图键名，Value 是位图文件名或二进制 PNG 数据。
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; images = 3;</code>
       */

      public Builder putAllImages(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableImages().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity> sprites_ =
        java.util.Collections.emptyList();
      private void ensureSpritesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          sprites_ = new java.util.ArrayList<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity>(sprites_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder> spritesBuilder_;

      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity> getSpritesList() {
        if (spritesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sprites_);
        } else {
          return spritesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public int getSpritesCount() {
        if (spritesBuilder_ == null) {
          return sprites_.size();
        } else {
          return spritesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity getSprites(int index) {
        if (spritesBuilder_ == null) {
          return sprites_.get(index);
        } else {
          return spritesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder setSprites(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity value) {
        if (spritesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpritesIsMutable();
          sprites_.set(index, value);
          onChanged();
        } else {
          spritesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder setSprites(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder builderForValue) {
        if (spritesBuilder_ == null) {
          ensureSpritesIsMutable();
          sprites_.set(index, builderForValue.build());
          onChanged();
        } else {
          spritesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder addSprites(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity value) {
        if (spritesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpritesIsMutable();
          sprites_.add(value);
          onChanged();
        } else {
          spritesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder addSprites(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity value) {
        if (spritesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpritesIsMutable();
          sprites_.add(index, value);
          onChanged();
        } else {
          spritesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder addSprites(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder builderForValue) {
        if (spritesBuilder_ == null) {
          ensureSpritesIsMutable();
          sprites_.add(builderForValue.build());
          onChanged();
        } else {
          spritesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder addSprites(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder builderForValue) {
        if (spritesBuilder_ == null) {
          ensureSpritesIsMutable();
          sprites_.add(index, builderForValue.build());
          onChanged();
        } else {
          spritesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder addAllSprites(
          java.lang.Iterable<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity> values) {
        if (spritesBuilder_ == null) {
          ensureSpritesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sprites_);
          onChanged();
        } else {
          spritesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder clearSprites() {
        if (spritesBuilder_ == null) {
          sprites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          spritesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public Builder removeSprites(int index) {
        if (spritesBuilder_ == null) {
          ensureSpritesIsMutable();
          sprites_.remove(index);
          onChanged();
        } else {
          spritesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder getSpritesBuilder(
          int index) {
        return getSpritesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder getSpritesOrBuilder(
          int index) {
        if (spritesBuilder_ == null) {
          return sprites_.get(index);  } else {
          return spritesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder>
           getSpritesOrBuilderList() {
        if (spritesBuilder_ != null) {
          return spritesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sprites_);
        }
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder addSpritesBuilder() {
        return getSpritesFieldBuilder().addBuilder(
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.getDefaultInstance());
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder addSpritesBuilder(
          int index) {
        return getSpritesFieldBuilder().addBuilder(
            index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.getDefaultInstance());
      }
      /**
       * <pre>
       * 元素列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.SpriteEntity sprites = 4;</code>
       */
      public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder>
           getSpritesBuilderList() {
        return getSpritesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder>
          getSpritesFieldBuilder() {
        if (spritesBuilder_ == null) {
          spritesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.SpriteEntityOrBuilder>(
                  sprites_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          sprites_ = null;
        }
        return spritesBuilder_;
      }

      private java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity> audios_ =
        java.util.Collections.emptyList();
      private void ensureAudiosIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          audios_ = new java.util.ArrayList<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity>(audios_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder> audiosBuilder_;

      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity> getAudiosList() {
        if (audiosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(audios_);
        } else {
          return audiosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public int getAudiosCount() {
        if (audiosBuilder_ == null) {
          return audios_.size();
        } else {
          return audiosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity getAudios(int index) {
        if (audiosBuilder_ == null) {
          return audios_.get(index);
        } else {
          return audiosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder setAudios(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity value) {
        if (audiosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudiosIsMutable();
          audios_.set(index, value);
          onChanged();
        } else {
          audiosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder setAudios(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder builderForValue) {
        if (audiosBuilder_ == null) {
          ensureAudiosIsMutable();
          audios_.set(index, builderForValue.build());
          onChanged();
        } else {
          audiosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder addAudios(com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity value) {
        if (audiosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudiosIsMutable();
          audios_.add(value);
          onChanged();
        } else {
          audiosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder addAudios(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity value) {
        if (audiosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAudiosIsMutable();
          audios_.add(index, value);
          onChanged();
        } else {
          audiosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder addAudios(
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder builderForValue) {
        if (audiosBuilder_ == null) {
          ensureAudiosIsMutable();
          audios_.add(builderForValue.build());
          onChanged();
        } else {
          audiosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder addAudios(
          int index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder builderForValue) {
        if (audiosBuilder_ == null) {
          ensureAudiosIsMutable();
          audios_.add(index, builderForValue.build());
          onChanged();
        } else {
          audiosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder addAllAudios(
          java.lang.Iterable<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity> values) {
        if (audiosBuilder_ == null) {
          ensureAudiosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, audios_);
          onChanged();
        } else {
          audiosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder clearAudios() {
        if (audiosBuilder_ == null) {
          audios_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          audiosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public Builder removeAudios(int index) {
        if (audiosBuilder_ == null) {
          ensureAudiosIsMutable();
          audios_.remove(index);
          onChanged();
        } else {
          audiosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder getAudiosBuilder(
          int index) {
        return getAudiosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder getAudiosOrBuilder(
          int index) {
        if (audiosBuilder_ == null) {
          return audios_.get(index);  } else {
          return audiosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public java.util.List<? extends com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder>
           getAudiosOrBuilderList() {
        if (audiosBuilder_ != null) {
          return audiosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(audios_);
        }
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder addAudiosBuilder() {
        return getAudiosFieldBuilder().addBuilder(
            com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.getDefaultInstance());
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder addAudiosBuilder(
          int index) {
        return getAudiosFieldBuilder().addBuilder(
            index, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.getDefaultInstance());
      }
      /**
       * <pre>
       * 音频列表
       * </pre>
       *
       * <code>repeated .com.opensource.svga.AudioEntity audios = 5;</code>
       */
      public java.util.List<com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder>
           getAudiosBuilderList() {
        return getAudiosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder>
          getAudiosFieldBuilder() {
        if (audiosBuilder_ == null) {
          audiosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntity.Builder, com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.AudioEntityOrBuilder>(
                  audios_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          audios_ = null;
        }
        return audiosBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.opensource.svga.MovieEntity)
    }

    // @@protoc_insertion_point(class_scope:com.opensource.svga.MovieEntity)
    private static final com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity();
    }

    public static com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MovieEntity>
        PARSER = new com.google.protobuf.AbstractParser<MovieEntity>() {
      @java.lang.Override
      public MovieEntity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MovieEntity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MovieEntity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MovieEntity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.svga.plugin.svga_plugin.svga_android_lib.proto.Svga.MovieEntity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_MovieParams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_MovieParams_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_SpriteEntity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_SpriteEntity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_AudioEntity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_AudioEntity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_Layout_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_Layout_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_Transform_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_Transform_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_ShapeEntity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_ShapeEntity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_ShapeEntity_RectArgs_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_ShapeEntity_RectArgs_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_FrameEntity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_FrameEntity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_MovieEntity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_MovieEntity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_opensource_svga_MovieEntity_ImagesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_opensource_svga_MovieEntity_ImagesEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nsvga.proto\022\023com.opensource.svga\"W\n\013Mov" +
      "ieParams\022\024\n\014viewBoxWidth\030\001 \001(\002\022\025\n\rviewBo" +
      "xHeight\030\002 \001(\002\022\013\n\003fps\030\003 \001(\005\022\016\n\006frames\030\004 \001" +
      "(\005\"d\n\014SpriteEntity\022\020\n\010imageKey\030\001 \001(\t\0220\n\006" +
      "frames\030\002 \003(\0132 .com.opensource.svga.Frame" +
      "Entity\022\020\n\010matteKey\030\003 \001(\t\"k\n\013AudioEntity\022" +
      "\020\n\010audioKey\030\001 \001(\t\022\022\n\nstartFrame\030\002 \001(\005\022\020\n" +
      "\010endFrame\030\003 \001(\005\022\021\n\tstartTime\030\004 \001(\005\022\021\n\tto" +
      "talTime\030\005 \001(\005\"=\n\006Layout\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030" +
      "\002 \001(\002\022\r\n\005width\030\003 \001(\002\022\016\n\006height\030\004 \001(\002\"O\n\t" +
      "Transform\022\t\n\001a\030\001 \001(\002\022\t\n\001b\030\002 \001(\002\022\t\n\001c\030\003 \001" +
      "(\002\022\t\n\001d\030\004 \001(\002\022\n\n\002tx\030\005 \001(\002\022\n\n\002ty\030\006 \001(\002\"\272\t" +
      "\n\013ShapeEntity\0228\n\004type\030\001 \001(\0162*.com.openso" +
      "urce.svga.ShapeEntity.ShapeType\022;\n\005shape" +
      "\030\002 \001(\0132*.com.opensource.svga.ShapeEntity" +
      ".ShapeArgsH\000\0229\n\004rect\030\003 \001(\0132).com.opensou" +
      "rce.svga.ShapeEntity.RectArgsH\000\022?\n\007ellip" +
      "se\030\004 \001(\0132,.com.opensource.svga.ShapeEnti" +
      "ty.EllipseArgsH\000\022;\n\006styles\030\n \001(\0132+.com.o" +
      "pensource.svga.ShapeEntity.ShapeStyle\0221\n" +
      "\ttransform\030\013 \001(\0132\036.com.opensource.svga.T" +
      "ransform\032\026\n\tShapeArgs\022\t\n\001d\030\001 \001(\t\032U\n\010Rect" +
      "Args\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\r\n\005width\030\003 \001(" +
      "\002\022\016\n\006height\030\004 \001(\002\022\024\n\014cornerRadius\030\005 \001(\002\032" +
      "E\n\013EllipseArgs\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\017\n\007" +
      "radiusX\030\003 \001(\002\022\017\n\007radiusY\030\004 \001(\002\032\320\004\n\nShape" +
      "Style\022C\n\004fill\030\001 \001(\01325.com.opensource.svg" +
      "a.ShapeEntity.ShapeStyle.RGBAColor\022E\n\006st" +
      "roke\030\002 \001(\01325.com.opensource.svga.ShapeEn" +
      "tity.ShapeStyle.RGBAColor\022\023\n\013strokeWidth" +
      "\030\003 \001(\002\022D\n\007lineCap\030\004 \001(\01623.com.opensource" +
      ".svga.ShapeEntity.ShapeStyle.LineCap\022F\n\010" +
      "lineJoin\030\005 \001(\01624.com.opensource.svga.Sha" +
      "peEntity.ShapeStyle.LineJoin\022\022\n\nmiterLim" +
      "it\030\006 \001(\002\022\021\n\tlineDashI\030\007 \001(\002\022\022\n\nlineDashI" +
      "I\030\010 \001(\002\022\023\n\013lineDashIII\030\t \001(\002\0327\n\tRGBAColo" +
      "r\022\t\n\001r\030\001 \001(\002\022\t\n\001g\030\002 \001(\002\022\t\n\001b\030\003 \001(\002\022\t\n\001a\030" +
      "\004 \001(\002\"B\n\007LineCap\022\020\n\014LineCap_BUTT\020\000\022\021\n\rLi" +
      "neCap_ROUND\020\001\022\022\n\016LineCap_SQUARE\020\002\"F\n\010Lin" +
      "eJoin\022\022\n\016LineJoin_MITER\020\000\022\022\n\016LineJoin_RO" +
      "UND\020\001\022\022\n\016LineJoin_BEVEL\020\002\"7\n\tShapeType\022\t" +
      "\n\005SHAPE\020\000\022\010\n\004RECT\020\001\022\013\n\007ELLIPSE\020\002\022\010\n\004KEEP" +
      "\020\003B\006\n\004args\"\300\001\n\013FrameEntity\022\r\n\005alpha\030\001 \001(" +
      "\002\022+\n\006layout\030\002 \001(\0132\033.com.opensource.svga." +
      "Layout\0221\n\ttransform\030\003 \001(\0132\036.com.opensour" +
      "ce.svga.Transform\022\020\n\010clipPath\030\004 \001(\t\0220\n\006s" +
      "hapes\030\005 \003(\0132 .com.opensource.svga.ShapeE" +
      "ntity\"\243\002\n\013MovieEntity\022\017\n\007version\030\001 \001(\t\0220" +
      "\n\006params\030\002 \001(\0132 .com.opensource.svga.Mov" +
      "ieParams\022<\n\006images\030\003 \003(\0132,.com.opensourc" +
      "e.svga.MovieEntity.ImagesEntry\0222\n\007sprite" +
      "s\030\004 \003(\0132!.com.opensource.svga.SpriteEnti" +
      "ty\0220\n\006audios\030\005 \003(\0132 .com.opensource.svga" +
      ".AudioEntity\032-\n\013ImagesEntry\022\013\n\003key\030\001 \001(\t" +
      "\022\r\n\005value\030\002 \001(\014:\0028\001B#\n!com.svga.plugin.s" +
      "vga_plugin.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_opensource_svga_MovieParams_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_opensource_svga_MovieParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_MovieParams_descriptor,
        new java.lang.String[] { "ViewBoxWidth", "ViewBoxHeight", "Fps", "Frames", });
    internal_static_com_opensource_svga_SpriteEntity_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_opensource_svga_SpriteEntity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_SpriteEntity_descriptor,
        new java.lang.String[] { "ImageKey", "Frames", "MatteKey", });
    internal_static_com_opensource_svga_AudioEntity_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_opensource_svga_AudioEntity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_AudioEntity_descriptor,
        new java.lang.String[] { "AudioKey", "StartFrame", "EndFrame", "StartTime", "TotalTime", });
    internal_static_com_opensource_svga_Layout_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_opensource_svga_Layout_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_Layout_descriptor,
        new java.lang.String[] { "X", "Y", "Width", "Height", });
    internal_static_com_opensource_svga_Transform_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_opensource_svga_Transform_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_Transform_descriptor,
        new java.lang.String[] { "A", "B", "C", "D", "Tx", "Ty", });
    internal_static_com_opensource_svga_ShapeEntity_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_opensource_svga_ShapeEntity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_ShapeEntity_descriptor,
        new java.lang.String[] { "Type", "Shape", "Rect", "Ellipse", "Styles", "Transform", "Args", });
    internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_descriptor =
      internal_static_com_opensource_svga_ShapeEntity_descriptor.getNestedTypes().get(0);
    internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_ShapeEntity_ShapeArgs_descriptor,
        new java.lang.String[] { "D", });
    internal_static_com_opensource_svga_ShapeEntity_RectArgs_descriptor =
      internal_static_com_opensource_svga_ShapeEntity_descriptor.getNestedTypes().get(1);
    internal_static_com_opensource_svga_ShapeEntity_RectArgs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_ShapeEntity_RectArgs_descriptor,
        new java.lang.String[] { "X", "Y", "Width", "Height", "CornerRadius", });
    internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_descriptor =
      internal_static_com_opensource_svga_ShapeEntity_descriptor.getNestedTypes().get(2);
    internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_ShapeEntity_EllipseArgs_descriptor,
        new java.lang.String[] { "X", "Y", "RadiusX", "RadiusY", });
    internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_descriptor =
      internal_static_com_opensource_svga_ShapeEntity_descriptor.getNestedTypes().get(3);
    internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_descriptor,
        new java.lang.String[] { "Fill", "Stroke", "StrokeWidth", "LineCap", "LineJoin", "MiterLimit", "LineDashI", "LineDashII", "LineDashIII", });
    internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_descriptor =
      internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_descriptor.getNestedTypes().get(0);
    internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_ShapeEntity_ShapeStyle_RGBAColor_descriptor,
        new java.lang.String[] { "R", "G", "B", "A", });
    internal_static_com_opensource_svga_FrameEntity_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_opensource_svga_FrameEntity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_FrameEntity_descriptor,
        new java.lang.String[] { "Alpha", "Layout", "Transform", "ClipPath", "Shapes", });
    internal_static_com_opensource_svga_MovieEntity_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_opensource_svga_MovieEntity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_MovieEntity_descriptor,
        new java.lang.String[] { "Version", "Params", "Images", "Sprites", "Audios", });
    internal_static_com_opensource_svga_MovieEntity_ImagesEntry_descriptor =
      internal_static_com_opensource_svga_MovieEntity_descriptor.getNestedTypes().get(0);
    internal_static_com_opensource_svga_MovieEntity_ImagesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_opensource_svga_MovieEntity_ImagesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
